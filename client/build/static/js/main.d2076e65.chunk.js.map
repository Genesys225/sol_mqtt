{"version":3,"sources":["validation/is-empty.js","components/common/ajax_loader_blue_256.gif","store.js","actions/types.js","utils/setAuthToken.js","actions/userActions.js","actions/authActions.js","utils/identicon.js","components/layout/Navbar.jsx","components/layout/Footer.jsx","components/layout/Landing.jsx","components/common/TextFieldGroup.jsx","components/auth/CreateUser.jsx","components/auth/Login.jsx","actions/nodeActions.js","components/charts/LineChart.jsx","components/common/spinner.jsx","components/charts/ChartModal.jsx","actions/telemetryActions.js","components/common/ItemList.jsx","components/HOC/SensorItemHOC.jsx","components/HOC/UserPrefercesHOC.jsx","components/common/InputModal.jsx","components/common/Card.jsx","selectors/nodeNameSelector.js","selectors/nodeTypesSelector.js","components/dashboard/Dashboard.jsx","App.jsx","serviceWorker.js","index.js","customMiddleware/emutableTelemetryLog.js","reducers/authReducer.js","reducers/userReducer.js","reducers/errorReducer.js","reducers/nodesReducer.js","reducers/telemetryRangeReducer.js","reducers/index.js","prod.store.js","customMiddleware/emutableRealtimeTelemetryKeys.js"],"names":["module","exports","value","undefined","Object","keys","length","trim","__webpack_require__","p","require","d","__webpack_exports__","GET_ERRORS","CLEAR_ERRORS","SET_CURRENT_USER","ADD_NODE_2NODES","ADD_TYPE_2NODE","EDIT_NODE_HANDLE","SET_USER_PREFERENCES","SET_VALUE_2NODE_TYPE","CACHE_SENSOR_TELEMETRY","CACHE_IN_PROGRESS","SET_NODE_NAME","SET_SENSOR_TYPE","SET_SENSOR_SAMPLE_RANGE","SET_NEW_TELEMETRY","SET_NEW_LOG_DATA","setAuthToken","token","axios","defaults","headers","common","getUserPreferences","userId","dispatch","get","concat","then","res","setUserPreferences","data","catch","err","type","payload","preferences","loginUser","userData","post","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","response","logoutUser","removeItem","persistor","purge","Identicon","Navbar","e","preventDefault","this","props","hex","_this$props$auth","auth","isAuthenticated","user","identiconData","identicon","toString","authLinks","react_default","a","createElement","className","Link","to","onClick","onLogoutClick","bind","style","width","marginRight","src","alt","userName","circle","guestLinks","fi","data-toggle","data-target","Component","connect","state","Footer","Date","getFullYear","Landing","history","push","nodes","telemetry","TextFieldGroup","_ref","name","placeholder","error","label","info","onChange","disabled","classnames","is-invalid","defaultProps","CreateUser","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","email","password","password2","errors","assertThisInitialized","onSubmit","nextProps","setState","defineProperty","target","newUser","registerUser","noValidate","common_TextFieldGroup","withRouter","Login","propTypes","PropTypes","func","isRequired","object","socket","openSocket","LineChart","chartData","datasets","dataSet","timeLabels","map","_id","day","month","hour","minute","avgValue","labels","react_chartjs_2_es","height","options","spinner","margin","display","ChartModal","_Component","componentWillReceiveProps","title","sensor","cacheInProgress","isValid","toHandler","fromHandler","inherits","createClass","key","test","newTitle","_this$state","tabIndex","role","LineChart_LineChart","data-dismiss","axiosCallDB","sonsorCreds","nodeName","sensorType","from","newTo","Promise","resolve","reject","SensorItemHOC","compose","sensors","fetchGraphData","cachingProgress","WrappedComponent","sampleData","parseFloat","split","badgeClassname","handlGraphClick","find","node","handle","_this2","_this$props","assign","displayGraphButton","Fragment","charts_ChartModal","go","listItemClassname","composedHoc","createOrUpdateHandel","handleData","saveCallback","statusText","user_id","UserPrefercesHOC","saveModalDetails","console","log","InputModal","handleSave","inPutHandler","inputHandler","result","document","getElementById","click","aria-label","aria-hidden","Card","items","values","filter","item","button","common_InputModal","sort","i","ItemList","createSelector","names","getOwnPropertyNames","Dashboard","componentDidMount","subscribe2RegisteredNodes","","dislplayComponent","common_Card","mapDispatchToProps","on","sensorPacket","nodeNameSelector","nodeTypesSelector","jwtToken","store","currentTime","now","exp","window","location","href","App","es","integration_react","loading","BrowserRouter","layout_Navbar","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","bool","getErrors","initialState","caching","combineReducers","arguments","action","objectSpread","isEmpty","_action$payload","name1","type1","_action$payload2","_state$nodeName1$sens","nodeName1","unshift","apply","toConsumableArray","prod_store_store","middleware","thunk","multi","next","mutateAction","getState","_payload","units","newMessageObject","emutableRealtimeTelemetryKeys","indexOf","emutableTelemetryLog","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","applyMiddleware","persistStore"],"mappings":"2EAMAA,EAAOC,QANS,SAAAC,GAAK,YACTC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,6BCJ7CN,EAAAC,QAAiBO,EAAAC,EAAuB,qJCGtCT,EAAOC,QAAUS,EAAQ,qCCH3BF,EAAAG,EAAAC,EAAA,sBAAAC,IAAAL,EAAAG,EAAAC,EAAA,sBAAAE,IAAAN,EAAAG,EAAAC,EAAA,sBAAAG,IAAAP,EAAAG,EAAAC,EAAA,sBAAAI,IAAAR,EAAAG,EAAAC,EAAA,sBAAAK,IAAAT,EAAAG,EAAAC,EAAA,sBAAAM,IAAAV,EAAAG,EAAAC,EAAA,sBAAAO,IAAAX,EAAAG,EAAAC,EAAA,sBAAAQ,IAAAZ,EAAAG,EAAAC,EAAA,sBAAAS,IAAAb,EAAAG,EAAAC,EAAA,sBAAAU,IAAAd,EAAAG,EAAAC,EAAA,sBAAAW,IAAAf,EAAAG,EAAAC,EAAA,sBAAAY,IAAAhB,EAAAG,EAAAC,EAAA,sBAAAa,IAAAjB,EAAAG,EAAAC,EAAA,sBAAAc,IAAAlB,EAAAG,EAAAC,EAAA,sBAAAe,IAAO,IAAMd,EAAa,aACbC,EAAe,eACfC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAuB,uBACvBC,EAAuB,uBAIvBC,EAAyB,yBACzBC,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAmB,oNCLjBC,EAVM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,sBCaEC,EAAqB,SAAAC,GAAM,OAAI,SAAAC,GAE1CN,IACGO,IADH,8BAAAC,OACqCH,IAClCI,KAAK,SAAAC,GACJJ,EAASK,EAAmBD,EAAIE,SAEjCC,MAAM,SAAAC,GAAG,OACRR,EAAS,CACPS,KAAMhC,IACNiC,QAASF,QAMJH,EAAqB,SAAAM,GAAW,OAAI,SAAAX,GAC/CA,EAAS,CACPS,KAAM1B,IACN2B,QAASC,MClBAC,EAAY,SAAAC,GAAQ,OAAI,SAAAb,GACnCN,IACGoB,KAAK,mBAAoBD,GACzBV,KAAK,SAAAC,GAAO,IAEHX,EAAUW,EAAIE,KAAdb,MAERsB,aAAaC,QAAQ,WAAYvB,GAEjCD,EAAaC,GAEb,IAAMwB,EAAUC,IAAWzB,GAE3BO,EAASmB,EAAeF,IACxBjB,EAASF,EAAmBmB,EAAQG,OAErCb,MAAM,SAAAC,GAAG,OACRR,EAAS,CACPS,KAAMhC,IACNiC,QAASF,EAAIa,SAASf,WAMjBa,EAAiB,SAAAF,GAC5B,MAAO,CACLR,KAAM9B,IACN+B,QAASO,IAKAK,EAAa,kBAAM,SAAAtB,GAE9Be,aAAaQ,WAAW,YACxBC,YAAUC,QAEVjC,GAAa,GAEbQ,EAASmB,EAAe,KACxBnB,EAASK,EAAmB,yBC/DxBqB,EAAYpD,EAAQ,kBCQpBqD,wLAMUC,GACZA,EAAEC,iBACFC,KAAKC,MAAMT,WAAWQ,KAAKC,MAAMP,4CAG1B,IDjBeQ,ECiBfC,EAC2BH,KAAKC,MAAMG,KAArCC,EADDF,EACCE,gBAAiBC,EADlBH,EACkBG,KACrBC,EAAgB,GACpBF,IAAoBE,EAAgB,WDpBdL,ECoBoCI,EAAKE,UDlB1D,IAAIZ,EADIM,EAAM,GACQ,KAAKO,aCmBhC,IAAMC,EACJC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BxB,GAAG,cAC3CqB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,YAC3B,IADH,aAOJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,IACHC,QAASjB,KAAKkB,cAAcC,KAAKnB,MACjCc,UAAU,0BAEVH,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVM,MAAO,CAAEC,MAAO,OAAQC,YAAa,OACrCC,IAAK,kBAAoBhB,EACzBiB,IAAKlB,EAAKmB,SACVC,OAAO,SACN,IAXL,aAmBFC,EACJhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BxB,GAAG,cAC3CqB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,cAC3B,IADH,eAOJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,YAAYE,GAAG,WAA/B,gBAIFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,UAA9B,YAQR,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,6BAA6BE,GAAG,KAC9CL,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOd,UAAU,SADnB,gBAGAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVnC,KAAK,SACLkD,cAAY,WACZC,cAAY,eAEZnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGjBT,EAAkBK,EAAYiB,WAxFpBI,aAmGNC,cAJS,SAAAC,GAAK,MAAK,CAChC7B,KAAM6B,EAAM7B,OAKZ,CAAEZ,cAFWwC,CAGbnC,SC3Ga,SAASqC,IACtB,OACEvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAAlB,mBACoB,IAAIqB,MAAOC,YAD/B,gBCAEC,8LAMErC,KAAKC,MAAMG,KAAKC,iBAClBL,KAAKC,MAAMqC,QAAQC,KAAK,+CAK1B,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACV,IADH,yEAKAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAUF,UAAU,6BAA7B,eAGAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,qCAA5B,qBA5BMiB,aA4CPC,cALS,SAAAC,GAAK,MAAK,CAChCO,MAAOP,EAAMQ,UAAUD,MACvBpC,KAAM6B,EAAM7B,OAGC4B,CAAyBK,4CC7ClCK,EAAiB,SAAAC,GAUjB,IATJC,EASID,EATJC,KACAC,EAQIF,EARJE,YACA7G,EAOI2G,EAPJ3G,MAEA8G,GAKIH,EANJI,MAMIJ,EALJG,OACAE,EAIIL,EAJJK,KACArE,EAGIgE,EAHJhE,KACAsE,EAEIN,EAFJM,SACAC,EACIP,EADJO,SAEA,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE7E,MAAOA,EACP8E,UAAWqC,IAAW,+BAAgC,CACpDC,aAAcN,IAEhBnE,KAAMA,EACNkE,YAAaA,EACbD,KAAMA,EACNK,SAAUA,EACVC,SAAUA,IAEXF,GAAQrC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwBkC,GACjDF,GAASnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBgC,KAgBnDJ,EAAeW,aAAe,CAC5B1E,KAAM,QAGO+D,QC1CTY,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAAsD,IACZC,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAoH,GAAAK,KAAA3D,QACKiC,MAAQ,CACXR,SAAU,GACVmC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,OAAQ,IAGVR,EAAKN,SAAWM,EAAKN,SAAS9B,KAAdjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAChBA,EAAKU,SAAWV,EAAKU,SAAS9C,KAAdjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAXJA,mFAeRvD,KAAKC,MAAMG,KAAKC,iBAClBL,KAAKC,MAAMqC,QAAQC,KAAK,gEAIF2B,GACpBA,EAAUH,QACZ/D,KAAKmE,SAAS,CAAEJ,OAAQG,EAAUH,0CAI7BjE,GACPE,KAAKmE,SAALjI,OAAAkI,EAAA,EAAAlI,CAAA,GAAiB4D,EAAEuE,OAAOzB,KAAO9C,EAAEuE,OAAOrI,yCAGnC8D,GACPA,EAAEC,iBAEF,IAAMuE,EAAU,CACd7C,SAAUzB,KAAKiC,MAAMR,SACrBmC,MAAO5D,KAAKiC,MAAM2B,MAClBC,SAAU7D,KAAKiC,MAAM4B,SACrBC,UAAW9D,KAAKiC,MAAM6B,WAGxB9D,KAAKC,MAAMsE,aAAaD,EAAStE,KAAKC,MAAMqC,0CAGrC,IACCyB,EAAW/D,KAAKiC,MAAhB8B,OAER,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAb,oCAGAH,EAAAC,EAAAC,cAAA,QAAM2D,YAAU,EAACP,SAAUjE,KAAKiE,UAC9BtD,EAAAC,EAAAC,cAAC4D,EAAD,CACE5B,YAAY,YACZD,KAAK,WACL5G,MAAOgE,KAAKiC,MAAMR,SAClBwB,SAAUjD,KAAKiD,SACfH,MAAOiB,EAAOtC,WAGhBd,EAAAC,EAAAC,cAAC4D,EAAD,CACE5B,YAAY,gBACZD,KAAK,QACLjE,KAAK,QACL3C,MAAOgE,KAAKiC,MAAM2B,MAClBX,SAAUjD,KAAKiD,SACfH,MAAOiB,EAAOH,QAGhBjD,EAAAC,EAAAC,cAAC4D,EAAD,CACE5B,YAAY,WACZD,KAAK,WACLjE,KAAK,WACL3C,MAAOgE,KAAKiC,MAAM4B,SAClBZ,SAAUjD,KAAKiD,SACfH,MAAOiB,EAAOF,WAGhBlD,EAAAC,EAAAC,cAAC4D,EAAD,CACE5B,YAAY,mBACZD,KAAK,YACLjE,KAAK,WACL3C,MAAOgE,KAAKiC,MAAM6B,UAClBb,SAAUjD,KAAKiD,SACfH,MAAOiB,EAAOD,YAEhBnD,EAAAC,EAAAC,cAAA,SACElC,KAAK,SACLmC,UAAU,6DA7FHiB,aAmHVC,cALS,SAAAC,GAAK,MAAK,CAChC7B,KAAM6B,EAAM7B,KACZ2D,OAAQ9B,EAAM8B,SAKd,CAAEQ,aNnHwB,SAACxF,EAAUuD,GAAX,OAAuB,SAAApE,GACjDN,IACGoB,KAAK,sBAAuBD,GAC5BV,KAAK,SAAAC,GAAG,OAAIgE,EAAQC,KAAK,YACzB9D,MAAM,SAAAC,GAAG,OACRR,EAAS,CACPS,KAAMhC,IACNiC,QAASF,EAAIa,SAASf,YM0GfwD,CAGb0C,YAAWpB,oBCvHPqB,cACJ,SAAAA,IAAc,IAAApB,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAA2E,IACZpB,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAyI,GAAAhB,KAAA3D,QACKiC,MAAQ,CACX4B,SAAU,GACVpC,SAAU,GACVsC,OAAQ,IAGVR,EAAKN,SAAWM,EAAKN,SAAS9B,KAAdjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAChBA,EAAKU,SAAWV,EAAKU,SAAS9C,KAAdjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KATJA,mFAaRvD,KAAKC,MAAMG,KAAKC,iBAClBL,KAAKC,MAAMqC,QAAQC,KAAK,gEAIF2B,GACpBA,EAAU9D,KAAKC,iBACjBL,KAAKC,MAAMqC,QAAQC,KAAK,cAGtB2B,EAAUH,QACZ/D,KAAKmE,SAAS,CAAEJ,OAAQG,EAAUH,0CAI7BjE,GACPE,KAAKmE,SAALjI,OAAAkI,EAAA,EAAAlI,CAAA,GAAiB4D,EAAEuE,OAAOzB,KAAO9C,EAAEuE,OAAOrI,yCAGnC8D,GACPA,EAAEC,iBAEF,IAAMhB,EAAW,CACf0C,SAAUzB,KAAKiC,MAAMR,SACrBoC,SAAU7D,KAAKiC,MAAM4B,UAGvB7D,KAAKC,MAAMnB,UAAUC,oCAEd,IACCgF,EAAW/D,KAAKiC,MAAhB8B,OAER,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAd,UACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAb,oCAGAH,EAAAC,EAAAC,cAAA,QAAMoD,SAAUjE,KAAKiE,UACnBtD,EAAAC,EAAAC,cAAC4D,EAAD,CACEzI,MAAOgE,KAAKiC,MAAMR,SAClBoB,YAAY,YACZD,KAAK,WACLK,SAAUjD,KAAKiD,SACfH,MAAOiB,EAAOtC,WAGhBd,EAAAC,EAAAC,cAAC4D,EAAD,CACEzI,MAAOgE,KAAKiC,MAAM4B,SAClBhB,YAAY,WACZD,KAAK,WACLjE,KAAK,WACLsE,SAAUjD,KAAKiD,SACfH,MAAOiB,EAAOF,WAGhBlD,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,SAASmC,UAAU,4CAzE3BiB,aAmFpBjD,EAAU8F,UAAY,CACpB9F,UAAW+F,IAAUC,KAAKC,WAC1B3E,KAAMyE,IAAUG,OAAOD,WACvBhB,OAAQc,IAAUG,OAAOD,YAG3B,IAKe/C,cALS,SAAAC,GAAK,MAAK,CAChC7B,KAAM6B,EAAM7B,KACZ2D,OAAQ9B,EAAM8B,SAKd,CAAEjF,aAFWkD,CAGb2C,YCpGEM,EAAS,KAEXA,QAASC,GAAW,+BAItB,8BCLqBC,eACnB,SAAAA,EAAYlF,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAAmF,IACjB5B,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAiJ,GAAAxB,KAAA3D,KAAMC,KACDgC,MAAQ,CACXmD,UAAW,CAAEC,SAAU,CAAC,CAAEtC,MAAO,GAAIvE,KAAM,CAAC,EAAG,OAHhC+E,mFAOC,IACZ+B,EAAYtF,KAAKC,MAAjBqF,QACN,GAAgB,IAAZA,EAAe,CACjB,IAAMC,EAAaD,EAAQE,IACzB,SAAAlH,GAAG,OACDA,EAAImH,IAAIC,IACR,IACApH,EAAImH,IAAIE,MACR,IACArH,EAAImH,IAAIG,KACR,KACCtH,EAAImH,IAAII,OAAS,GAAK,IAAMvH,EAAImH,IAAII,OAASvH,EAAImH,IAAII,UAEpDrH,EAAO8G,EAAQE,IAAI,SAAAlH,GAAG,OAAIA,EAAIwH,WACpC9F,KAAKmE,SAAS,CACZiB,UAAW,CACTW,OAAQR,EACRF,SAAU,CACR,CACEtC,MAAO,kBACPvE,KAAMA,yCAahB,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACExH,KAAMwB,KAAKiC,MAAMmD,UACjB/D,MAAO,IACP4E,OAAQ,GACRC,QACE,aAhD2BnE,kCCDxBoE,GAAA,WACb,OACExF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEU,IAAK4E,KACL/E,MAAO,CAAEC,MAAO,QAAS+E,OAAQ,OAAQC,QAAS,SAClD7E,IAAI,cC4EG8E,GAhFf,SAAAC,GACE,SAAAD,EAAYrG,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAAsG,IACjB/C,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAoK,GAAA3C,KAAA3D,KAAMC,KA8BRuG,0BAA4B,SAAAtC,GAC1BX,EAAKY,SAAS,CACZsC,MAAOvC,EAAUuC,MACjBC,OAAQxC,EAAUwC,OAClBpB,QAASpB,EAAUoB,QACnBqB,gBAAiBzC,EAAUyC,mBAlC7BpD,EAAKtB,MAAQ,CACX2E,SAAS,EACT7C,OAAQ,MAEVR,EAAKsD,UAAYtD,EAAKsD,UAAU1F,KAAfjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KACjBA,EAAKuD,YAAcvD,EAAKuD,YAAY3F,KAAjBjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAPFA,EADrB,OAAArH,OAAA6K,EAAA,EAAA7K,CAAAoK,EAAAC,GAAArK,OAAA8K,EAAA,EAAA9K,CAAAoK,EAAA,EAAAW,IAAA,cAAAjL,MAAA,SAgBc8D,GACVE,KAAKmE,SAAS,CACZyC,QAAS,2BAA2BM,KAAKpH,EAAEuE,OAAOrI,OAClD+H,OAAQ,KACRoD,SAAUrH,EAAEuE,OAAOrI,UApBzB,CAAAiL,IAAA,YAAAjL,MAAA,SAwBY8D,GACRE,KAAKmE,SAAS,CACZyC,QAAS,2BAA2BM,KAAKpH,EAAEuE,OAAOrI,OAClD+H,OAAQ,KACRoD,SAAUrH,EAAEuE,OAAOrI,UA5BzB,CAAAiL,IAAA,SAAAjL,MAAA,WAyCW,IAAAoL,EACqDpH,KAAKiC,MAAzDwE,EADDW,EACCX,MAAOC,EADRU,EACQV,OAAgBpB,GADxB8B,EACgBrD,OADhBqD,EACwB9B,SAASqB,EADjCS,EACiCT,gBACxC,OACEhG,EAAAC,EAAAC,cAAA,OACEC,UAAU,iCACVxB,GAAImH,EAAQ,IAAMC,EAClBW,SAAS,KACTC,KAAK,UAEL3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAewG,KAAK,YACjC3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcxB,GAAG,qBAA/B,SACSmH,IAGX9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACd6F,IAAoBrB,EACnB3E,EAAAC,EAAAC,cAACsF,GAAD,MAEAxF,EAAAC,EAAAC,cAAC0G,GAAD,CAAWjC,QAASA,IAEtB3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UACElC,KAAK,SACLmC,UAAU,oBACV0G,eAAa,QACblI,GAAI,IAAMmH,EAAQC,GAJpB,iBAhEdJ,EAAA,CAAgCvE,aCD1B0F,GAAc,SAAAC,GAAe,IACzBC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,WAAYC,EAAoBH,EAApBG,KAAM7G,EAAc0G,EAAd1G,GAAI8G,EAAUJ,EAAVI,MACxC,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BrK,IACGO,IADH,8BAAAC,OAEkCuJ,EAFlC,KAAAvJ,OAE8CwJ,EAF9C,KAAAxJ,OAE4DyJ,EAF5D,KAAAzJ,OAGM0J,GAAgB9G,IAGnB3C,KAAK,SAAAC,GAAG,OAAI0J,EAAQ1J,EAAIE,QACxBC,MAAM,SAAAC,GAAG,OAAIuJ,EAAOvJ,QCqBZwJ,GCkGKC,YAClBnG,YAPsB,SAAAC,GAAK,MAAK,CAChCmG,QAASnG,EAAMmG,QACf9H,KAAM2B,EAAM3B,KACZF,KAAM6B,EAAM7B,OAMV,CAAEiI,eFtHwB,SAACX,EAAaY,GAAd,OAAkC,SAAApK,GAC9DA,EAAS,CACPS,KAAMlB,IACNmB,QAAS,CACP8I,cACAD,eACAa,yBEjBgB,SAAAC,GACpB,gBAAAhC,GACE,SAAA2B,EAAYjI,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAAkI,IACjB3E,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAgM,GAAAvE,KAAA3D,KAAMC,KAyBRqI,gBAAkB,SAAC7B,EAAOC,GAAW,IAC7B8B,EAAejF,EAAKtD,MAAMmI,QAAQ3B,GAAOC,GAAzC8B,WACNjF,EAAKY,SAAS,CAAEqE,gBA5BCjF,EA+BnBiD,0BAA4B,SAAAtC,GAAa,IACjCwC,EAAkBxC,EAAlBwC,OAAQ1K,EAAUkI,EAAVlI,MACd,OAAQ0K,GACN,IAAK,aACC+B,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACpCnF,EAAKY,SAAS,CAAEwE,eAAgB,iBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,kBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,kBAC7BpF,EAAKY,SAAS,CAAEwE,eAAgB,kBACrC,MAEF,IAAK,WACCF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACpCnF,EAAKY,SAAS,CAAEwE,eAAgB,iBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,kBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,oBAC7BpF,EAAKY,SAAS,CAAEwE,eAAgB,kBACrC,MAEF,IAAK,MACCF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,KACpCnF,EAAKY,SAAS,CAAEwE,eAAgB,iBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,KACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,kBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,IACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,oBAC7BpF,EAAKY,SAAS,CAAEwE,eAAgB,kBACrC,MAEF,IAAK,QACCF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACpCnF,EAAKY,SAAS,CAAEwE,eAAgB,eACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,oBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,GACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,iBACzBF,WAAWzM,EAAM0M,MAAM,KAAK,IAAM,IACzCnF,EAAKY,SAAS,CAAEwE,eAAgB,kBAC7BpF,EAAKY,SAAS,CAAEwE,eAAgB,oBAtEzCpF,EAAKtB,MAAQ,CACXuG,WAAY,EACZG,eAAgB,IAElBpF,EAAKqF,gBAAkBrF,EAAKqF,gBAAgBzH,KAArBjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAPNA,EADrB,OAAArH,OAAA6K,EAAA,EAAA7K,CAAAgM,EAAA3B,GAAArK,OAAA8K,EAAA,EAAA9K,CAAAgM,EAAA,EAAAjB,IAAA,kBAAAjL,MAAA,SAWkByK,EAAOC,GAAQ,IACrBlE,EAAUxC,KAAKC,MAAMK,KAAKzB,YAA1B2D,MACJA,EAAMpG,OAAS,IACjBqK,EAAQjE,EAAMqG,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAWtC,IAAOqC,KAAKlG,MACzD,IAEI8E,EAAc,CAChBC,SAAUlB,EACVmB,WAAYlB,EACZmB,KALS,aAMT7G,GALO,cAQThB,KAAKC,MAAMoI,eAAeX,EAAa1H,KAAKsI,mBAxBhD,CAAArB,IAAA,SAAAjL,MAAA,WAiFW,IAAAgN,EAAAhJ,KACCK,EAAoBL,KAAKC,MAAMG,KAA/BC,gBADD4I,EAEiBjJ,KAAKC,MAAvBwG,EAFCwC,EAEDxC,MAAOC,EAFNuC,EAEMvC,OAFNU,EAI+BpH,KAAKiC,MAArCuG,EAJCpB,EAIDoB,WAAY7B,EAJXS,EAIWT,gBAClB,OACEhG,EAAAC,EAAAC,cAAC0H,EAADrM,OAAAgN,OAAA,GACMlJ,KAAKC,MADX,CAEE0I,eAAgB3I,KAAKiC,MAAM0G,eAC3BQ,qBACE9I,GACEM,EAAAC,EAAAC,cAACF,EAAAC,EAAMwI,SAAP,KACEzI,EAAAC,EAAAC,cAACwI,GAAD,CACE5C,MAAOA,EACPC,OAAQA,EACRpB,QAASkD,EACT7B,gBAAiBA,IAEnBhG,EAAAC,EAAAC,cAAA,UACEC,UAAU,qCACVnC,KAAK,SACLkD,cAAY,QACZC,cAAa,IAAM2E,EAAQ,IAAMC,EACjCzF,QAAS,kBAAM+H,EAAKJ,gBAAgBnC,EAAOC,KAE3C/F,EAAAC,EAAAC,cAACyI,EAAA,EAAD,OACQ,YA3GxBpB,EAAA,CAAmCnG,cD2BtBmG,CA9BO,SAAAjI,GAAS,IACvB0I,EAAsD1I,EAAtD0I,eAAgBQ,EAAsClJ,EAAtCkJ,mBAAoBzC,EAAkBzG,EAAlByG,OAAQ1K,EAAUiE,EAAVjE,MAC9CuN,EAAoBJ,EAAqB,YAAc,YAE3D,OACExI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,MACEoG,IAAKP,EACL5F,UAAWqC,IACT,oEACAoG,IAGD7C,EACD/F,EAAAC,EAAAC,cAAA,QAAMC,UAAWqC,IAAW,oBAAqBwF,IAC9C3M,IAGJmN,MEoCMK,GARKrB,YAClBnG,YANsB,SAAAC,GAAK,MAAK,CAChC3B,KAAM2B,EAAM3B,KACZF,KAAM6B,EAAM7B,OAMV,CAAEqJ,qBhBnD8B,SAACC,EAAYC,GAAb,OAA8B,SAAAzL,GAEhEN,IACGoB,KADH,4BAAAZ,OACoCsL,EAAWjD,OAASiD,GACrDrL,KAAK,SAAAC,GACJqL,EAAarL,EAAIsL,YACjB1L,EAASF,EAAmB0L,EAAWG,YAExCpL,MAAM,SAAAC,GACLiL,EAAajL,EAAIa,SAASf,KAAKuF,QAC/B7F,EAAS,CACPS,KAAMhC,IACNiC,QAASF,EAAIa,SAASf,agBXL,SAAA+J,GACvB,gBAAAhC,GACE,SAAAuD,EAAY7J,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAA8J,IACjBvG,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAA4N,GAAAnG,KAAA3D,KAAMC,KAiBRuG,0BAA4B,SAAAtC,GAAa,IAC/BuC,EAAUlD,EAAKtD,MAAfwG,MACR,GAAIvC,EAAU5D,KAAKzB,YAAY2D,MAAO,KAC5BA,EAAU0B,EAAU5D,KAAKzB,YAAzB2D,MACJA,EAAMpG,OAAS,IACjBmH,EAAKwF,OAASvG,EAAMqG,KAAK,SAAAC,GAAI,OAAIA,EAAKA,KAAKlG,OAAS6D,IAAOsC,aACxDxF,EAAKwF,OAAStC,GArBrBlD,EAAKtB,MAAQ,GACbsB,EAAKwG,iBAAmBxG,EAAKwG,iBAAiB5I,KAAtBjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAJPA,EADrB,OAAArH,OAAA6K,EAAA,EAAA7K,CAAA4N,EAAAvD,GAAArK,OAAA8K,EAAA,EAAA9K,CAAA4N,EAAA,EAAA7C,IAAA,mBAAAjL,MAAA,SAQmB+M,EAAQY,GAAc,IAEjCD,EAAa,CACfG,QAFa7J,KAAKC,MAAMG,KAAKE,KAAvBhB,GAGNmH,MAAOzG,KAAKC,MAAMwG,MAClBsC,UAEFiB,QAAQC,IAAIP,GACZ1J,KAAKC,MAAMwJ,qBAAqBC,EAAYC,KAhBhD,CAAA1C,IAAA,SAAAjL,MAAA,WA2BW,IACCqE,EAAoBL,KAAKC,MAAMG,KAA/BC,gBAER,OACEM,EAAAC,EAAAC,cAAC0H,EAADrM,OAAAgN,OAAA,GACMlJ,KAAKC,MADX,CAEEwG,MAAOzG,KAAK+I,OACZgB,iBAAkB1J,EAAkBL,KAAK+J,iBAAmB,YAlCpED,EAAA,CAAsC/H,eCsHzBmI,GAxHf,SAAA3D,GACE,SAAA2D,EAAYjK,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAAkK,IACjB3G,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAgO,GAAAvG,KAAA3D,KAAMC,KAsCRuG,0BAA4B,SAAAtC,GAC1BX,EAAKY,SAAS,CACZsC,MAAOvC,EAAUuC,SAvCnBlD,EAAKtB,MAAQ,CACX2E,SAAS,EACT7C,OAAQ,MAEVR,EAAK4G,WAAa5G,EAAK4G,WAAWhJ,KAAhBjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KAClBA,EAAK6G,aAAe7G,EAAK8G,aAAalJ,KAAlBjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KACpBA,EAAKoG,aAAepG,EAAKoG,aAAaxI,KAAlBjF,OAAA8H,EAAA,EAAA9H,QAAA8H,EAAA,EAAA9H,CAAAqH,KARHA,EADrB,OAAArH,OAAA6K,EAAA,EAAA7K,CAAAgO,EAAA3D,GAAArK,OAAA8K,EAAA,EAAA9K,CAAAgO,EAAA,EAAAjD,IAAA,eAAAjL,MAAA,SAiBesO,GACI,OAAXA,EACFC,SAASC,eAAe,IAAMxK,KAAKiC,MAAMwE,OAAOgE,QAEhDzK,KAAKmE,SAAS,CACZJ,OAAQuG,EAAO7J,WACfmG,SAAS,MAvBjB,CAAAK,IAAA,aAAAjL,MAAA,WA2Be,IACHmL,EAAanH,KAAKiC,MAAlBkF,SACRnH,KAAKC,MAAM8J,iBAAiB5C,EAAUnH,KAAK2J,gBA7B/C,CAAA1C,IAAA,eAAAjL,MAAA,SAgCe8D,GACXE,KAAKmE,SAAS,CACZyC,QAAS,2BAA2BM,KAAKpH,EAAEuE,OAAOrI,OAClD+H,OAAQ,KACRoD,SAAUrH,EAAEuE,OAAOrI,UApCzB,CAAAiL,IAAA,SAAAjL,MAAA,WA8CW,IAAAgN,EAAAhJ,KAAAoH,EAC4BpH,KAAKiC,MAAhCwE,EADDW,EACCX,MAAOG,EADRQ,EACQR,QAAS7C,EADjBqD,EACiBrD,OAExB,OACEpD,EAAAC,EAAAC,cAAA,OACEC,UAAU,2BACVxB,GAAImH,EACJY,SAAS,KACTC,KAAK,UAEL3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAewG,KAAK,YACjC3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcxB,GAAG,qBAA/B,SACSmH,GAET9F,EAAAC,EAAAC,cAAA,UACElC,KAAK,SACLmC,UAAU,QACV0G,eAAa,QACbkD,aAAW,SAEX/J,EAAAC,EAAAC,cAAA,QAAM8J,cAAY,QAAlB,UAGJhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,YAEFH,EAAAC,EAAAC,cAAA,SACElC,KAAK,OACLmC,UAAWqC,IAAW,eAAgB,CACpCC,cAAewD,IAEjB/D,YAAa4D,EACbiE,aAAYjE,EACZxD,SAAU,SAAAnD,GAAC,OAAIkJ,EAAKqB,aAAavK,OAGjC8G,GACAjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXiD,GAAS,wCAKnBpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UACElC,KAAK,SACLmC,UAAU,oBACV0G,eAAa,QACblI,GAAI,IAAMmH,GAJZ,SAQA9F,EAAAC,EAAAC,cAAA,UACElC,KAAK,SACLmC,UAAU,kBACVoC,UAAW0D,EACX3F,QAAS,WACP+H,EAAKmB,eALT,wBAtGdD,EAAA,CAAgCnI,aC6DjB+H,kBAzDb,SAAAc,EAAY3K,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAA4K,IACjBrH,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAA0O,GAAAjH,KAAA3D,KAAMC,KACDgC,MAAQ,GAFIsB,wEAKV,IACDsH,EAAU7K,KAAKC,MAAf4K,MADC5B,EAEqCjJ,KAAKC,MAAzC8J,EAFDd,EAECc,iBAAkBe,EAFnB7B,EAEmB6B,OAAQrE,EAF3BwC,EAE2BxC,MAClCoE,EAAQA,EAAME,OAAO,SAAAC,GAAI,MAAa,cAATA,IAC7B,IAAMC,EAASlB,EACbpJ,EAAAC,EAAAC,cAAA,UACEC,UAAU,+CACVe,cAAY,QACZC,cAAa,IAAM2E,GAHrB,QAOE,KACJ,OACE9F,EAAAC,EAAAC,cAACF,EAAAC,EAAMwI,SAAP,KACEzI,EAAAC,EAAAC,cAACqK,GAAD,CACEzE,MAAOA,EACPsC,OAAQtC,EACRsD,iBAAkBA,GAAoBA,IAExCpJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZ2F,EACAwE,GAEHtK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGZ+J,EAAMM,OAAO3F,IAAI,SAACwF,EAAMI,GAAP,OAChBzK,EAAAC,EAAAC,cAACwK,GAAD,CACEpE,IAAK+D,EACLvE,MAAOA,EACPC,OAAQsE,EACRhP,MAAO8O,EAAOE,GAAMhP,qBAxCnB+F,uBCGJuJ,gBARW,SAAArJ,GAAK,OAAIA,EAAMQ,WAExB,SAAAD,GACf,IAAI+I,EAAQrP,OAAOsP,oBAAoBhJ,EAAMA,OAE7C,OADA+I,EAAQA,EAAMJ,OAAOJ,OAAO,SAAAnI,GAAI,MAAa,cAATA,MCEvB0I,gBANgB,SAAArJ,GAAK,OAAIA,EAAMQ,WAE7B,SAAAD,GACf,OAAOA,EAAMA,QCETiJ,eACJ,SAAAA,EAAYxL,GAAO,IAAAsD,EAAA,OAAArH,OAAAsH,EAAA,EAAAtH,CAAA8D,KAAAyL,IACjBlI,EAAArH,OAAAuH,EAAA,EAAAvH,CAAA8D,KAAA9D,OAAAwH,EAAA,EAAAxH,CAAAuP,GAAA9H,KAAA3D,KAAMC,KAQRyL,kBAAoB,WAClBnI,EAAKtD,MAAM0L,6BAPXpI,EAAKtB,MAAQ,CACXsJ,MAAO,KACP/I,MAAO,CAAEoJ,GAAI,KALErI,wEAaV,IAAA0F,EACgBjJ,KAAKC,MAAtBuC,EADCyG,EACDzG,MAAO+I,EADNtC,EACMsC,MACTM,EAAoBlL,EAAAC,EAAAC,cAACsF,GAAD,MAiBxB,OAfc,OAAVoF,GAAkBA,EAAMnP,OAAS,IACnCyP,EACElL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACZyK,EAAM/F,IAAI,SAAA5C,GAAI,OACbjC,EAAAC,EAAAC,cAACiL,GAAD,CACE7E,IAAKrE,EACL6D,MAAO7D,EACPiI,MAAO3O,OAAOsP,oBAAoBhJ,EAAMI,IACxCkI,OAAQtI,EAAMI,UAMnBjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwI,SAAP,KAAiByC,UAjCJ9J,aA4ClBgK,GAAqB,CAAEJ,0BZ1CK,kBAAM,SAAAzN,GACtC+G,EAAO+G,GAAG,QAAS,SAAAC,GACjB/N,EAAS,CACPS,KAAMnB,IACNoB,QAASqN,SYwCAjK,eATS,SAAAC,GAAK,MAAK,CAChCsJ,MAAOW,GAAiBjK,GACxBO,MAAO2J,GAAkBlK,GACzB7B,KAAM6B,EAAM7B,KACZ2D,OAAQ9B,EAAM8B,SAOdgI,GAFa/J,CAGbyJ,ICpCF,GAAIxM,aAAamN,SAAU,CACzB1O,EAAauB,aAAamN,UAC1B,IAAMjN,GAAUC,IAAWH,aAAamN,UACxCC,QAAMnO,SAASmB,EAAeF,KAC9BkN,QAAMnO,SAASF,EAAmBmB,GAAQG,KAC1C,IAAMgN,GAAcnK,KAAKoK,MAAQ,IAC7BpN,GAAQqN,IAAMF,KAChBD,QAAMnO,SAASsB,KACfiN,OAAOC,SAASC,KAAO,cA2BZC,oLArBX,OACEjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUR,MAAOA,SACf1L,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAaC,QAAS,KAAMrN,UAAWA,aACrCiB,EAAAC,EAAAC,cAACmM,EAAA,EAAD,KACErM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACoM,EAAD,MACAtM,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhL,IACjC1B,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW5B,KAC1C9K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW/J,IACvC3C,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW1I,KAExChE,EAAAC,EAAAC,cAACqB,EAAD,iBAdIH,aCpBEuL,QACW,cAA7Bb,OAAOC,SAASa,UAEe,UAA7Bd,OAAOC,SAASa,UAEhBd,OAAOC,SAASa,SAASC,MACvB,2DCZNC,IAASC,OAAO/M,EAAAC,EAAAC,cAAC8M,GAAD,MAASpD,SAASC,eAAe,SDuH3C,kBAAmBoD,WACrBA,UAAUC,cAAcC,MAAMzP,KAAK,SAAA0P,GACjCA,EAAaC,mFEpDbrH,EAAkB,SAAAsH,GACtB,MAAO,CACLtP,KAAMvB,IACNwB,QAASqP,IAIPC,EAAY,SAAAxP,GAChB,MAAO,CACLC,KAAMhC,IACNiC,QAASF,EAAIa,SAASf,4DCjFpB2P,EAAe,CACnB9N,iBAAiB,EACjBC,KAAM,ICJF6N,EAAe,CACnBtP,YAAa,ICDTsP,EAAe,GCIfA,EAAe,CACnB3L,MAAO,aCCH2L,EAAe,CACnBC,SAAS,GCFIC,cAAgB,CAC7BjO,KLCa,WAAuC,IAA9B6B,EAA8BqM,UAAAlS,OAAA,QAAAH,IAAAqS,UAAA,GAAAA,UAAA,GAAtBH,EAAcI,EAAQD,UAAAlS,OAAA,EAAAkS,UAAA,QAAArS,EACpD,OAAQsS,EAAO5P,MACb,KAAK9B,IACH,OAAOX,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,EADL,CAEE5B,iBAAkBoO,IAAQF,EAAO3P,SACjC0B,KAAMiO,EAAO3P,UAEjB,QACE,OAAOqD,IKTX3B,KJHF,WAAsD,IAA9B2B,EAA8BqM,UAAAlS,OAAA,QAAAH,IAAAqS,UAAA,GAAAA,UAAA,GAAtBH,EAAcI,EAAQD,UAAAlS,OAAA,EAAAkS,UAAA,QAAArS,EACpD,OAAQsS,EAAO5P,MACb,KAAK3B,IACH,OAAOd,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,GAEP,KAAKhF,IACH,OAAOf,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,EADL,CAEEpD,YAAa0P,EAAO3P,UAExB,QACE,OAAOqD,IIRXQ,UFAa,WAAuC,IAA9BR,EAA8BqM,UAAAlS,OAAA,QAAAH,IAAAqS,UAAA,GAAAA,UAAA,GAAtBH,EAAcI,EAAQD,UAAAlS,OAAA,EAAAkS,UAAA,QAAArS,EACpD,OAAQsS,EAAO5P,MACb,KAAK7B,IACH,OAAOZ,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,EADL,CAEEO,MAAO+L,EAAO3P,UAElB,KAAK7B,IAAL,IAAA2R,EACuCH,EAAO3P,QAA9B+P,EADhBD,EACU9L,KAAmBgM,EAD7BF,EACuB/P,KAErB,OADAsD,EAAMO,MAAMmM,GAASC,EACd1S,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,GAEP,KAAK/E,IAAL,IAAA2R,EACgCN,EAAO3P,QAA7BgE,EADViM,EACUjM,KAAMjE,EADhBkQ,EACgBlQ,KAAM3C,EADtB6S,EACsB7S,MAEpB,OADAiG,EAAMO,MAAMI,GAAMjE,KAAUsD,EAAMO,MAAMI,GAAMjE,GAAM3C,MAAQA,GACrDE,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,GAEP,QACE,OAAOA,IEnBXmG,QDCa,WAAuC,IAAA0G,EAA9B7M,EAA8BqM,UAAAlS,OAAA,QAAAH,IAAAqS,UAAA,GAAAA,UAAA,GAAtBH,EAAcI,EAAQD,UAAAlS,OAAA,EAAAkS,UAAA,QAAArS,EACpD,OAAQsS,EAAO5P,MACb,KAAKxB,IACH,OAAOjB,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,EACAsM,EAAO3P,SAGd,KAAKvB,IAAL,IAAAqR,EAC2BH,EAAO3P,QAA1B+I,EADR+G,EACQ/G,SAAUnJ,EADlBkQ,EACkBlQ,KAEhB,OADAyD,EAAM0F,GAAYzL,OAAOgN,OAAOjH,EAAM0F,GAAWnJ,GAC1CtC,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,GAGP,KAAK3E,IAAL,IAAAuR,EAOMN,EAAO3P,QALCmQ,EAFdF,EAEIlH,SACAC,EAHJiH,EAGIjH,WACAC,EAJJgH,EAIIhH,KACA7G,EALJ6N,EAKI7N,GACAwH,EANJqG,EAMIrG,WAKF,OAHAvG,EAAM8M,GAAWnH,GAAYC,KAAOA,EACpC5F,EAAM8M,GAAWnH,GAAY5G,GAAKA,GAClC8N,EAAA7M,EAAM8M,GAAWnH,GAAYY,YAAWwG,QAAxCC,MAAAH,EAAA5S,OAAAgT,EAAA,EAAAhT,CAAmDsM,IAC5CtM,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,GAGP,KAAK1E,IACH,OAAO0E,EAET,KAAK7E,IACH,OAAOlB,OAAAsS,EAAA,EAAAtS,CAAA,GACF+F,EADL,CAEEmM,QAASG,EAAO3P,UAGpB,QACE,OAAOqD,ICxCX8B,OHRa,WAAuC,IAA9B9B,EAA8BqM,UAAAlS,OAAA,QAAAH,IAAAqS,UAAA,GAAAA,UAAA,GAAtBH,EAAcI,EAAQD,UAAAlS,OAAA,EAAAkS,UAAA,QAAArS,EACpD,OAAQsS,EAAO5P,MACb,KAAKhC,IACH,OAAO4R,EAAO3P,QAChB,KAAKhC,IACH,MAAO,GACT,QACE,OAAOqF,gCIXb3F,EAAAG,EAAAC,EAAA,0BAAAyS,IAAA7S,EAAAG,EAAAC,EAAA,8BAAAgD,IAYA,IAcM0P,EAAa,CAACC,IAAOC,IAdF,SAAAjD,GAAK,OAAI,SAAAkD,GAAI,OAAI,SAAAhB,GAAU,IAC5C5P,EAAS4P,EAAT5P,KACF6Q,GAAe,EAEV,sBAAT7Q,IACG6Q,ECXU,SAACnD,EAAOkC,GAAW,IAC1B5P,EAAkB4P,EAAlB5P,KAAMC,EAAY2P,EAAZ3P,QACJ4D,EAAU6J,EAAMoD,WAAWhN,UAA3BD,MACR,GAAa,sBAAT7D,EAA8B,KAAA+Q,EACK9Q,EAA7BgE,EADwB8M,EACxB9M,KAAMjE,EADkB+Q,EAClB/Q,KAAM3C,EADY0T,EACZ1T,MAAO2T,EADKD,EACLC,MAC3B/Q,EAAU4D,EACV,IAAIoN,EAAgB1T,OAAAkI,EAAA,EAAAlI,CAAA,GAAMyC,EAAO,CAAE3C,MAAOA,EAAQ2T,IAClD,OAAInN,EAAMI,GACJJ,EAAMI,GAAMjE,IACdC,EAAQgE,GAAMjE,GAAQzC,OAAOgN,OAC3B1G,EAAMI,GAAMjE,GACZiR,EAAiBjR,IAEZ,CACLA,KAAMzB,IACN0B,QAAS,CAAEgE,OAAMjE,OAAM3C,MAAOA,EAAQ2T,MAGxC/Q,EAAQgE,GAAQ1G,OAAOgN,OAAO1G,EAAMI,GAAOgN,GACpC,CACLjR,KAAM5B,IACN6B,QAAgBA,EAAQgE,MAI5BhE,EAAU1C,OAAOgN,OAAOtK,EAAd1C,OAAAkI,EAAA,EAAAlI,CAAA,GACP0G,EADO1G,OAAAkI,EAAA,EAAAlI,CAAA,GACGyC,EAAO,CAAE3C,MAAOA,EAAQ2T,MAE9B,CACLhR,KAAM7B,IACN8B,YAGC,OAAO,EDtBIiR,CAA8BxD,EAAOkC,IAE9C,qBAAT5P,IACG6Q,EPZU,SAACnD,EAAOkC,GAAW,IACxBnG,EAAYiE,EAAMoD,WAAlBrH,QACAlK,EAAamO,EAAbnO,SAFwBwQ,EAGoBH,EAAO3P,QAArD8I,EAH0BgH,EAG1BhH,YAAaD,EAHaiH,EAGbjH,YAAaa,EAHAoG,EAGApG,gBACxBX,EAAmCD,EAAnCC,SAAUC,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,KAAM7G,EAAO0G,EAAP1G,GAEpC,GADA2F,GAAgB,GACZzK,OAAOsP,oBAAoBpD,GAAS0H,QAAQnI,IAAa,EAC3D,GACEzL,OAAOsP,oBAAoBpD,EAAQT,IAAWmI,QAAQlI,IAAe,EACrE,CACA,GAAIQ,EAAQT,GAAUC,GAAYC,MAAQA,EAExC,OADAS,EAAgBX,EAAUC,GACnBjB,GAAgB,GACdyB,EAAQT,GAAUC,GAAYC,KAAOA,IAC9CH,EAAYI,MAAQM,EAAQT,GAAUC,GAAYC,KAClDJ,EAAYC,GACTrJ,KAAK,SAAAC,GAYJ,OAXAJ,EAAS,CACPS,KAAMrB,IACNsB,QAAS,CACP+I,WACAC,aACAC,OACA7G,KACAwH,WAAYlK,KAGhBgK,EAAgBX,EAAUC,GACnBjB,GAAgB,KAExBlI,MAAM,SAAAC,GACL,OAAOwP,EAAUxP,WAIvB+I,EAAYC,GACTrJ,KAAK,SAAAC,GASJ,OARAJ,EAAS,CACPS,KAAMtB,IACNuB,QAAS,CACP+I,WACAnJ,KAAKtC,OAAAkI,EAAA,EAAAlI,CAAA,GAAI0L,EAAa,CAAEC,OAAM7G,KAAIwH,WAAYlK,OAGlDgK,EAAgBX,EAAUC,GACnBjB,GAAgB,KAExBlI,MAAM,SAAAC,GACL,OAAOwP,EAAUxP,UAGvB+I,EAAYC,GACTrJ,KAAK,SAAAC,GAQJ,OAPAJ,EAAS,CACPS,KAAMxB,IACNyB,QAAQ1C,OAAAkI,EAAA,EAAAlI,CAAA,GACLyL,EADIzL,OAAAkI,EAAA,EAAAlI,CAAA,GACU0L,EAAa,CAAEC,OAAM7G,KAAIwH,WAAYlK,OAGxDgK,EAAgBX,EAAUC,GACnBjB,GAAgB,KAExBlI,MAAM,SAAAC,GACL,OAAOwP,EAAUxP,KOnDLqR,CAAqB1D,EAAOkC,IAE9CiB,IAAiBjB,EAASiB,GAC1BD,EAAKhB,OAKDyB,EAAgB,CACpB/I,IAAK,OACLgJ,aAGIC,EAAmBC,YAAeH,EAAeI,GAEnD/D,EAAQgE,YACVH,EACA/H,YAAQmI,IAAerB,WAAf,EAAmBG,KAEzB1P,EAAY6Q,YAAalE","file":"static/js/main.d2076e65.chunk.js","sourcesContent":["const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nmodule.exports = isEmpty;\r\n","module.exports = __webpack_public_path__ + \"static/media/ajax_loader_blue_256.14df1151.gif\";","// Use DefinePlugin (Webpack) or loose-envify (Browserify)\r\n// together with Uglify to strip the dev branch in prod build.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  module.exports = require(\"./prod.store\");\r\n} else {\r\n  module.exports = require(\"./dev.store\");\r\n}\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_NODE_2NODES = \"ADD_NODE_2NODES\";\r\nexport const ADD_TYPE_2NODE = \"ADD_TYPE_2NODE\";\r\nexport const EDIT_NODE_HANDLE = \"EDIT_NODE_HANDLE\";\r\nexport const SET_USER_PREFERENCES = \"SET_USER_PREFERENCES\";\r\nexport const SET_VALUE_2NODE_TYPE = \"SET_VALUE_2NODE_TYPE\";\r\nexport const GET_NODE_NAME = \"GET_NODE_NAME\";\r\nexport const GET_SENSOR_TYPE = \"GET_SENSOR_TYPE\";\r\nexport const GET_SENSOR_SAMPLE_RANGE = \"GET_SENSOR_SAMPLE_RANGE\";\r\nexport const CACHE_SENSOR_TELEMETRY = \"CACHE_SENSOR_TELEMETRY\";\r\nexport const CACHE_IN_PROGRESS = \"CACHE_IN_PROGRESS\";\r\nexport const SET_NODE_NAME = \"SET_NODE_NAME\";\r\nexport const SET_SENSOR_TYPE = \"SET_SENSOR_TYPE\";\r\nexport const SET_SENSOR_SAMPLE_RANGE = \"SET_SENSOR_SAMPLE_RANGE\";\r\nexport const SET_NEW_TELEMETRY = \"SET_NEW_TELEMETRY\";\r\nexport const SET_NEW_LOG_DATA = \"SET_NEW_LOG_DATA\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete Auth Header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { GET_ERRORS, SET_USER_PREFERENCES } from \"./types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const createOrUpdateHandel = (handleData, saveCallback) => dispatch => {\r\n  // Create Or Update Handel\r\n  axios\r\n    .post(`/api/users/assign-handle/${handleData.title}`, handleData)\r\n    .then(res => {\r\n      saveCallback(res.statusText);\r\n      dispatch(getUserPreferences(handleData.user_id));\r\n    })\r\n    .catch(err => {\r\n      saveCallback(err.response.data.errors);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const getUserPreferences = userId => dispatch => {\r\n  // get User Preferences\r\n  axios\r\n    .get(`/api/users/get-preferences/${userId}`)\r\n    .then(res => {\r\n      dispatch(setUserPreferences(res.data));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      })\r\n    );\r\n};\r\n\r\n// Set user preferences\r\nexport const setUserPreferences = preferences => dispatch => {\r\n  dispatch({\r\n    type: SET_USER_PREFERENCES,\r\n    payload: preferences\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { getUserPreferences, setUserPreferences } from \"./userActions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { persistor } from \"../store\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData) // Maybe user userData instead decoding token\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to auth header\r\n      setAuthToken(token);\r\n      // Decode token (extract user data)\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n      dispatch(getUserPreferences(decoded.id));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Logout user\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  persistor.purge();\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set the current user to {} which will set isAuthenticated to false (states)\r\n  dispatch(setCurrentUser({}));\r\n  dispatch(setUserPreferences({}));\r\n};\r\n","const Identicon = require(\"identicon.js\");\r\n\r\nexport function identIcon(hex) {\r\n  const newhex = hex + 77;\r\n  return new Identicon(newhex, 200).toString();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { identIcon } from \"../../utils/identicon\";\r\nimport { FiCpu } from \"react-icons/fi\";\r\n\r\nclass Navbar extends Component {\r\n  static propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    this.props.logoutUser(this.props.persistor);\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    let identiconData = \"\";\r\n    isAuthenticated && (identiconData = \"base64,\" + identIcon(user.identicon));\r\n    const authLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/manager\">\r\n              {\" \"}\r\n              Manager\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/\"\r\n              onClick={this.onLogoutClick.bind(this)}\r\n              className=\"nav-link text-black-50\"\r\n            >\r\n              <img\r\n                className=\"rounded\"\r\n                style={{ width: \"30px\", marginRight: \"5px\" }}\r\n                src={\"data:image/png;\" + identiconData}\r\n                alt={user.userName}\r\n                circle=\"true\"\r\n              />{\" \"}\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              {\" \"}\r\n              dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item \">\r\n            <Link className=\"nav-link \" to=\"/create\">\r\n              Create User\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4 \">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand text-white-50\" to=\"/\">\r\n            <FiCpu className=\"mb-2\" /> SOL Manager\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          {isAuthenticated ? authLinks : guestLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Navbar);\r\n","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer mt-5 p-4 text-center bg-primary\">\r\n      Copiright &copy; {new Date().getFullYear} SOL App\r\n    </footer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">SOL Manager</h1>\r\n                <p className=\"lead\">\r\n                  {\" \"}\r\n                  Create a user or login in order to manage/view you'r\r\n                  site/node/s data\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/create\" className=\"btn btn-lg btn-light mr-2\">\r\n                  Create User\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg text-dark btn-primary \">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  nodes: state.telemetry.nodes,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        value={value}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass CreateUser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      userName: this.state.userName,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center text-black-50\">Sign Up</h1>\r\n              <p className=\"lead text-center text-white-50\">\r\n                Create your DevConnector account\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"User name\"\r\n                  name=\"userName\"\r\n                  value={this.state.userName}\r\n                  onChange={this.onChange}\r\n                  error={errors.userName}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"password2\"\r\n                  type=\"password\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={errors.password2}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary text-black-50 btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateUser.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(CreateUser));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      password: \"\",\r\n      userName: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      userName: this.state.userName,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login \">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center text-black-50\">Log In</h1>\r\n              <p className=\"lead text-center text-white-50\">\r\n                Login to your managemant account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  value={this.state.userName}\r\n                  placeholder=\"User name\"\r\n                  name=\"userName\"\r\n                  onChange={this.onChange}\r\n                  error={errors.userName}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  value={this.state.password}\r\n                  placeholder=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nloginUser.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import openSocket from \"socket.io-client\";\r\n\r\nimport { SET_NEW_TELEMETRY } from \"./types\";\r\nlet socket = null;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  socket = openSocket(\"http://198.199.124.158:5001\");\r\n} else {\r\n  socket = openSocket(\"http://127.0.0.1:5001\");\r\n}\r\nconst subscribe2RegisteredNodes = () => dispatch => {\r\n  socket.on(\"event\", sensorPacket => {\r\n    dispatch({\r\n      type: SET_NEW_TELEMETRY,\r\n      payload: sensorPacket\r\n    });\r\n  });\r\n};\r\n\r\nexport { subscribe2RegisteredNodes };\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class LineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: { datasets: [{ label: \"\", data: [0, 0] }] }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { dataSet } = this.props;\r\n    if (dataSet !== 0) {\r\n      const timeLabels = dataSet.map(\r\n        res =>\r\n          res._id.day +\r\n          \"/\" +\r\n          res._id.month +\r\n          \" \" +\r\n          res._id.hour +\r\n          \":\" +\r\n          (res._id.minute < 10 ? \"0\" + res._id.minute : res._id.minute)\r\n      );\r\n      const data = dataSet.map(res => res.avgValue);\r\n      this.setState({\r\n        chartData: {\r\n          labels: timeLabels,\r\n          datasets: [\r\n            {\r\n              label: \"Average sampled\",\r\n              data: data\r\n            }\r\n          ]\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    prop: PropTypes\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={this.state.chartData}\r\n          width={100}\r\n          height={80}\r\n          options={\r\n            {\r\n              //maintainAspectRatio: false\r\n            }\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport spinner from \"./ajax_loader_blue_256.gif\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n        alt=\"Loadind\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LineChart from \"./LineChart\";\r\nimport Spinner from \"../common/spinner\";\r\n\r\nexport class ChartModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isValid: true,\r\n      errors: null\r\n    };\r\n    this.toHandler = this.toHandler.bind(this);\r\n    this.fromHandler = this.fromHandler.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    sensor: PropTypes.string\r\n  };\r\n\r\n  fromHandler(e) {\r\n    this.setState({\r\n      isValid: /^[A-Za-z][A-Za-z0-9-_]*$/.test(e.target.value),\r\n      errors: null,\r\n      newTitle: e.target.value\r\n    });\r\n  }\r\n\r\n  toHandler(e) {\r\n    this.setState({\r\n      isValid: /^[A-Za-z][A-Za-z0-9-_]*$/.test(e.target.value),\r\n      errors: null,\r\n      newTitle: e.target.value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    this.setState({\r\n      title: nextProps.title,\r\n      sensor: nextProps.sensor,\r\n      dataSet: nextProps.dataSet,\r\n      cacheInProgress: nextProps.cacheInProgress\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, sensor, errors, dataSet, cacheInProgress } = this.state;\r\n    return (\r\n      <div\r\n        className=\"modal fade bd-example-modal-lg\"\r\n        id={title + \"_\" + sensor}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Node: {title}\r\n              </h5>\r\n            </div>\r\n            <div className=\"modal-body\" />\r\n            {cacheInProgress || !dataSet ? (\r\n              <Spinner />\r\n            ) : (\r\n              <LineChart dataSet={dataSet} />\r\n            )}\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n                id={\"#\" + title + sensor}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartModal;\r\n","import { SET_NEW_LOG_DATA } from \"./types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst axiosCallDB = sonsorCreds => {\r\n  const { nodeName, sensorType, from, to, newTo } = sonsorCreds;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\r\n        `/api/telemetry/get-between/${nodeName}/${sensorType}/${from}/${\r\n          newTo ? newTo : to\r\n        }`\r\n      )\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  });\r\n};\r\n\r\nexport const fetchGraphData = (sonsorCreds, cachingProgress) => dispatch => {\r\n  dispatch({\r\n    type: SET_NEW_LOG_DATA,\r\n    payload: {\r\n      sonsorCreds,\r\n      axiosCallDB,\r\n      cachingProgress\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport SensorItemHOC from \"../HOC/SensorItemHOC\";\r\n\r\nconst listItemGroup = props => {\r\n  let { badgeClassname, displayGraphButton, sensor, value } = props;\r\n  let listItemClassname = displayGraphButton ? \"col-md-10\" : \"col-md-12\";\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      <div className=\"row justify-content-start\">\r\n        <li\r\n          key={sensor}\r\n          className={classnames(\r\n            \"list-group-item d-flex justify-content-between align-items-center\",\r\n            listItemClassname\r\n          )}\r\n        >\r\n          {sensor}\r\n          <span className={classnames(\"badge  badge-pill\", badgeClassname)}>\r\n            {value}\r\n          </span>\r\n        </li>\r\n        {displayGraphButton}\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nlistItemGroup.propTypes = {\r\n  sensor: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SensorItemHOC(listItemGroup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { GoGraph } from \"react-icons/go\";\r\nimport ChartModal from \"../charts/ChartModal\";\r\nimport { fetchGraphData } from \"../../actions/telemetryActions\";\r\n\r\nconst SensorItemHOC = WrappedComponent => {\r\n  return class SensorItemHOC extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        sampleData: 0,\r\n        badgeClassname: \"\"\r\n      };\r\n      this.handlGraphClick = this.handlGraphClick.bind(this);\r\n    }\r\n\r\n    handlGraphClick(title, sensor) {\r\n      const { nodes } = this.props.user.preferences;\r\n      if (nodes.length > 0)\r\n        title = nodes.find(node => node.handle === title).node.name;\r\n      let from = 1542465373000 - 91000000;\r\n      let to = 1542465373000;\r\n      let sonsorCreds = {\r\n        nodeName: title,\r\n        sensorType: sensor,\r\n        from,\r\n        to\r\n      };\r\n\r\n      this.props.fetchGraphData(sonsorCreds, this.cachingProgress);\r\n    }\r\n\r\n    cachingProgress = (title, sensor) => {\r\n      let { sampleData } = this.props.sensors[title][sensor];\r\n      this.setState({ sampleData });\r\n    };\r\n\r\n    componentWillReceiveProps = nextProps => {\r\n      let { sensor, value } = nextProps;\r\n      switch (sensor) {\r\n        case \"temperture\":\r\n          if (parseFloat(value.split(\"(\")[0]) > 28)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) > 26)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 22)\r\n            this.setState({ badgeClassname: \"badge-primary\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        case \"humidity\":\r\n          if (parseFloat(value.split(\"(\")[0]) > 55)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) > 45)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 20)\r\n            this.setState({ badgeClassname: \"badge-secondary\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        case \"co2\":\r\n          if (parseFloat(value.split(\"(\")[0]) > 1600)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) > 1300)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 800)\r\n            this.setState({ badgeClassname: \"badge-secondary\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        case \"light\":\r\n          if (parseFloat(value.split(\"(\")[0]) < 10)\r\n            this.setState({ badgeClassname: \"badge-dark\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 40)\r\n            this.setState({ badgeClassname: \"badge-secondary\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 80)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 150)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    render() {\r\n      const { isAuthenticated } = this.props.auth;\r\n      let { title, sensor } = this.props;\r\n\r\n      let { sampleData, cacheInProgress } = this.state;\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          badgeClassname={this.state.badgeClassname}\r\n          displayGraphButton={\r\n            isAuthenticated ? (\r\n              <React.Fragment>\r\n                <ChartModal\r\n                  title={title}\r\n                  sensor={sensor}\r\n                  dataSet={sampleData}\r\n                  cacheInProgress={cacheInProgress}\r\n                />\r\n                <button\r\n                  className=\"btn btn-outline-secondary col-md-2\"\r\n                  type=\"button\"\r\n                  data-toggle=\"modal\"\r\n                  data-target={\"#\" + title + \"_\" + sensor}\r\n                  onClick={() => this.handlGraphClick(title, sensor)}\r\n                >\r\n                  <GoGraph />\r\n                </button>{\" \"}\r\n              </React.Fragment>\r\n            ) : (\r\n              false\r\n            )\r\n          }\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  sensors: state.sensors,\r\n  user: state.user,\r\n  auth: state.auth\r\n});\r\n\r\nconst composedHoc = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { fetchGraphData }\r\n  ),\r\n  SensorItemHOC\r\n);\r\n\r\nexport default composedHoc;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createOrUpdateHandel } from \"../../actions/userActions\";\r\n\r\nconst UserPrefercesHOC = WrappedComponent => {\r\n  return class UserPrefercesHOC extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {};\r\n      this.saveModalDetails = this.saveModalDetails.bind(this);\r\n    }\r\n\r\n    saveModalDetails(handle, saveCallback) {\r\n      const { id } = this.props.auth.user;\r\n      let handleData = {\r\n        user_id: id,\r\n        title: this.props.title,\r\n        handle\r\n      };\r\n      console.log(handleData);\r\n      this.props.createOrUpdateHandel(handleData, saveCallback);\r\n    }\r\n\r\n    componentWillReceiveProps = nextProps => {\r\n      const { title } = this.props;\r\n      if (nextProps.user.preferences.nodes) {\r\n        const { nodes } = nextProps.user.preferences;\r\n        if (nodes.length > 0)\r\n          this.handle = nodes.find(node => node.node.name === title).handle;\r\n      } else this.handle = title;\r\n    };\r\n    render() {\r\n      const { isAuthenticated } = this.props.auth;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          title={this.handle}\r\n          saveModalDetails={isAuthenticated ? this.saveModalDetails : null}\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  auth: state.auth\r\n});\r\n\r\nconst composedHoc = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { createOrUpdateHandel }\r\n  ),\r\n  UserPrefercesHOC\r\n);\r\n\r\nexport default composedHoc;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nexport class InputModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isValid: true,\r\n      errors: null\r\n    };\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.inPutHandler = this.inputHandler.bind(this);\r\n    this.saveCallback = this.saveCallback.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    handle: PropTypes.string\r\n  };\r\n\r\n  saveCallback(result) {\r\n    if (result === \"OK\")\r\n      document.getElementById(\"#\" + this.state.title).click();\r\n    else\r\n      this.setState({\r\n        errors: result.toString(),\r\n        isValid: false\r\n      });\r\n  }\r\n\r\n  handleSave() {\r\n    const { newTitle } = this.state;\r\n    this.props.saveModalDetails(newTitle, this.saveCallback);\r\n  }\r\n\r\n  inputHandler(e) {\r\n    this.setState({\r\n      isValid: /^[A-Za-z][A-Za-z0-9-_]*$/.test(e.target.value),\r\n      errors: null,\r\n      newTitle: e.target.value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    this.setState({\r\n      title: nextProps.title\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, isValid, errors } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"modal modal-primary fade\"\r\n        id={title}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Node: {title}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">Handle:</span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control\", {\r\n                    \"is-invalid\": !isValid\r\n                  })}\r\n                  placeholder={title}\r\n                  aria-label={title}\r\n                  onChange={e => this.inputHandler(e)}\r\n                />\r\n\r\n                {!isValid && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {!errors ? \"Only letters and/or numbers alowed\" : errors}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n                id={\"#\" + title}\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                disabled={!isValid}\r\n                onClick={() => {\r\n                  this.handleSave();\r\n                }}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputModal;\r\n","import React, { Component } from \"react\";\r\n// import classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport ItemList from \"../common/ItemList\";\r\nimport UserPrefercesHOC from \"../HOC/UserPrefercesHOC\";\r\nimport InputModal from \"./InputModal\";\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let { items } = this.props;\r\n    const { saveModalDetails, values, title } = this.props;\r\n    items = items.filter(item => item !== \"undefined\");\r\n    const button = saveModalDetails ? (\r\n      <button\r\n        className=\"btn btn-sm btn-outline-secondary float-right\"\r\n        data-toggle=\"modal\"\r\n        data-target={\"#\" + title}\r\n      >\r\n        Edit\r\n      </button>\r\n    ) : null;\r\n    return (\r\n      <React.Fragment>\r\n        <InputModal\r\n          title={title}\r\n          handle={title}\r\n          saveModalDetails={saveModalDetails && saveModalDetails}\r\n        />\r\n        <div className=\"col col-md-4 col-sm-auto align-self-center\">\r\n          <div className=\"card bg-light mb-3 \">\r\n            <div className=\"card-header\">\r\n              {title}\r\n              {button}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {/* <h5 className=\"card-title\">{handle ? handle : name}</h5> \r\n              <p className=\"card-text\" />*/}\r\n              {items.sort().map((item, i) => (\r\n                <ItemList\r\n                  key={item}\r\n                  title={title}\r\n                  sensor={item}\r\n                  value={values[item].value}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  sensors: PropTypes.array.isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  handle: PropTypes.string\r\n};\r\n\r\nexport default UserPrefercesHOC(Card);\r\n","import { createSelector } from \"reselect\";\r\n// Select function to collect state parts\r\nconst telemetrySelector = state => state.telemetry;\r\n\r\nconst getNames = nodes => {\r\n  let names = Object.getOwnPropertyNames(nodes.nodes);\r\n  names = names.sort().filter(name => name !== \"undefined\");\r\n  return names;\r\n};\r\n\r\nexport default createSelector(telemetrySelector, getNames);\r\n","import { createSelector } from \"reselect\";\r\n// Select function to collect state parts\r\nconst changeDetectorSelector = state => state.telemetry;\r\n\r\nconst getTypes = nodes => {\r\n  return nodes.nodes;\r\n};\r\n\r\nexport default createSelector(changeDetectorSelector, getTypes);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { subscribe2RegisteredNodes } from \"../../actions/nodeActions\";\r\nimport Card from \"../common/Card\";\r\nimport nodeNameSelector from \"../../selectors/nodeNameSelector\";\r\nimport nodeTypesSelector from \"../../selectors/nodeTypesSelector\";\r\nimport Spinner from \"../common/spinner\";\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      names: null,\r\n      nodes: { \"\": \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.subscribe2RegisteredNodes();\r\n  };\r\n\r\n  render() {\r\n    let { nodes, names } = this.props;\r\n    let dislplayComponent = <Spinner />;\r\n\r\n    if (names !== null && names.length > 0)\r\n      dislplayComponent = (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row align-items-start justify-content-center\">\r\n            {names.map(name => (\r\n              <Card\r\n                key={name}\r\n                title={name}\r\n                items={Object.getOwnPropertyNames(nodes[name])}\r\n                values={nodes[name]}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    return <React.Fragment>{dislplayComponent}</React.Fragment>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  names: nodeNameSelector(state),\r\n  nodes: nodeTypesSelector(state),\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nconst mapDispatchToProps = { subscribe2RegisteredNodes };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport { getUserPreferences } from \"./actions/userActions\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport CreateUser from \"./components/auth/CreateUser\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\n\r\nimport \"./App.css\";\r\n\r\n// Check for token\r\nif (localStorage.jwtToken) {\r\n  setAuthToken(localStorage.jwtToken);\r\n  const decoded = jwt_decode(localStorage.jwtToken);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  store.dispatch(getUserPreferences(decoded.id));\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = \"/login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <Router>\r\n            <div className=\"App \">\r\n              <Navbar />\r\n              <Route exact path=\"/\" component={Landing} />\r\n              <Route exact path=\"/dashboard\" component={Dashboard} />\r\n              <div className=\"container\">\r\n                <Route exact path=\"/create\" component={CreateUser} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          </Router>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  CACHE_SENSOR_TELEMETRY,\r\n  SET_NODE_NAME,\r\n  SET_SENSOR_TYPE,\r\n  GET_ERRORS,\r\n  CACHE_IN_PROGRESS\r\n} from \"../actions/types\";\r\n\r\nexport default (store, action) => {\r\n  const { sensors } = store.getState();\r\n  const { dispatch } = store;\r\n  let { sonsorCreds, axiosCallDB, cachingProgress } = action.payload;\r\n  const { nodeName, sensorType, from, to } = sonsorCreds;\r\n  cacheInProgress(true);\r\n  if (Object.getOwnPropertyNames(sensors).indexOf(nodeName) > -1) {\r\n    if (\r\n      Object.getOwnPropertyNames(sensors[nodeName]).indexOf(sensorType) > -1\r\n    ) {\r\n      if (sensors[nodeName][sensorType].from <= from) {\r\n        cachingProgress(nodeName, sensorType);\r\n        return cacheInProgress(false);\r\n      } else if (sensors[nodeName][sensorType].from > from) {\r\n        sonsorCreds.newTo = sensors[nodeName][sensorType].from;\r\n        axiosCallDB(sonsorCreds)\r\n          .then(res => {\r\n            dispatch({\r\n              type: SET_SENSOR_TYPE,\r\n              payload: {\r\n                nodeName,\r\n                sensorType,\r\n                from,\r\n                to,\r\n                sampleData: res\r\n              }\r\n            });\r\n            cachingProgress(nodeName, sensorType);\r\n            return cacheInProgress(false);\r\n          })\r\n          .catch(err => {\r\n            return getErrors(err);\r\n          });\r\n      }\r\n    } else\r\n      axiosCallDB(sonsorCreds)\r\n        .then(res => {\r\n          dispatch({\r\n            type: SET_NODE_NAME,\r\n            payload: {\r\n              nodeName,\r\n              data: { [sensorType]: { from, to, sampleData: res } }\r\n            }\r\n          });\r\n          cachingProgress(nodeName, sensorType);\r\n          return cacheInProgress(false);\r\n        })\r\n        .catch(err => {\r\n          return getErrors(err);\r\n        });\r\n  } else\r\n    axiosCallDB(sonsorCreds)\r\n      .then(res => {\r\n        dispatch({\r\n          type: CACHE_SENSOR_TELEMETRY,\r\n          payload: {\r\n            [nodeName]: { [sensorType]: { from, to, sampleData: res } }\r\n          }\r\n        });\r\n        cachingProgress(nodeName, sensorType);\r\n        return cacheInProgress(false);\r\n      })\r\n      .catch(err => {\r\n        return getErrors(err);\r\n      });\r\n};\r\n\r\nconst cacheInProgress = bool => {\r\n  return {\r\n    type: CACHE_IN_PROGRESS,\r\n    payload: bool\r\n  };\r\n};\r\n\r\nconst getErrors = err => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: err.response.data\r\n  };\r\n};\r\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { EDIT_NODE_HANDLE, SET_USER_PREFERENCES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  preferences: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case EDIT_NODE_HANDLE:\r\n      return {\r\n        ...state\r\n      };\r\n    case SET_USER_PREFERENCES:\r\n      return {\r\n        ...state,\r\n        preferences: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_NODE_2NODES,\r\n  ADD_TYPE_2NODE,\r\n  SET_VALUE_2NODE_TYPE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  nodes: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_NODE_2NODES:\r\n      return {\r\n        ...state,\r\n        nodes: action.payload\r\n      };\r\n    case ADD_TYPE_2NODE:\r\n      const { name: name1, type: type1 } = action.payload;\r\n      state.nodes[name1] = type1;\r\n      return {\r\n        ...state\r\n      };\r\n    case SET_VALUE_2NODE_TYPE:\r\n      const { name, type, value } = action.payload;\r\n      state.nodes[name][type] && (state.nodes[name][type].value = value);\r\n      return {\r\n        ...state\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CACHE_SENSOR_TELEMETRY,\r\n  CACHE_IN_PROGRESS,\r\n  SET_NODE_NAME,\r\n  SET_SENSOR_TYPE,\r\n  SET_SENSOR_SAMPLE_RANGE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  caching: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CACHE_SENSOR_TELEMETRY:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n    case SET_NODE_NAME:\r\n      let { nodeName, data } = action.payload;\r\n      state[nodeName] = Object.assign(state[nodeName], data);\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case SET_SENSOR_TYPE:\r\n      let {\r\n        nodeName: nodeName1,\r\n        sensorType,\r\n        from,\r\n        to,\r\n        sampleData\r\n      } = action.payload;\r\n      state[nodeName1][sensorType].from = from;\r\n      state[nodeName1][sensorType].to = to;\r\n      state[nodeName1][sensorType].sampleData.unshift(...sampleData);\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case SET_SENSOR_SAMPLE_RANGE:\r\n      return state;\r\n\r\n    case CACHE_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        caching: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport nodesReducer from \"./nodesReducer\";\r\nimport telemetryRangeReducer from \"./telemetryRangeReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  telemetry: nodesReducer,\r\n  sensors: telemetryRangeReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport emutableRealtimeTelemetryKeys from \"./customMiddleware/emutableRealtimeTelemetryKeys\";\r\nimport emutableTelemetryLog from \"./customMiddleware/emutableTelemetryLog\";\r\n// async action dispatch\r\nimport thunk from \"redux-thunk\";\r\n// dispatchy action arrays\r\nimport multi from \"redux-multi\";\r\nimport rootReducer from \"./reducers\";\r\n// redux persistance (cache)\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nconst customMiddleware = store => next => action => {\r\n  let { type } = action;\r\n  let mutateAction = false;\r\n  //\r\n  type === \"SET_NEW_TELEMETRY\" &&\r\n    (mutateAction = emutableRealtimeTelemetryKeys(store, action));\r\n\r\n  type === \"SET_NEW_LOG_DATA\" &&\r\n    (mutateAction = emutableTelemetryLog(store, action));\r\n\r\n  mutateAction && (action = mutateAction);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [thunk, multi, customMiddleware];\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nlet store = createStore(\r\n  persistedReducer,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\nlet persistor = persistStore(store);\r\nexport { store, persistor };\r\n","import {\r\n  ADD_NODE_2NODES,\r\n  ADD_TYPE_2NODE,\r\n  SET_VALUE_2NODE_TYPE\r\n} from \"../actions/types\";\r\n\r\nexport default (store, action) => {\r\n  let { type, payload } = action;\r\n  const { nodes } = store.getState().telemetry;\r\n  if (type === \"SET_NEW_TELEMETRY\") {\r\n    const { name, type, value, units } = payload;\r\n    payload = nodes;\r\n    let newMessageObject = { [type]: { value: value + units } };\r\n    if (nodes[name]) {\r\n      if (nodes[name][type]) {\r\n        payload[name][type] = Object.assign(\r\n          nodes[name][type],\r\n          newMessageObject[type]\r\n        );\r\n        return {\r\n          type: SET_VALUE_2NODE_TYPE,\r\n          payload: { name, type, value: value + units }\r\n        };\r\n      } else {\r\n        payload[name] = Object.assign(nodes[name], newMessageObject);\r\n        return {\r\n          type: ADD_TYPE_2NODE,\r\n          payload: (name, payload[name])\r\n        };\r\n      }\r\n    } else {\r\n      payload = Object.assign(payload, {\r\n        [name]: { [type]: { value: value + units } }\r\n      });\r\n      return {\r\n        type: ADD_NODE_2NODES,\r\n        payload\r\n      };\r\n    }\r\n  } else return false;\r\n  //console.log(payload, nodes);\r\n};\r\n"],"sourceRoot":""}