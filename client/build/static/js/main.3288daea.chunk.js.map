{"version":3,"sources":["validation/is-empty.js","components/common/ajax_loader_blue_256.gif","customMiddleware/emutableTelemetryLog.js","actions/types.js","reducers/authReducer.js","reducers/userReducer.js","reducers/errorReducer.js","reducers/nodesReducer.js","reducers/telemetryRangeReducer.js","reducers/index.js","store.js","customMiddleware/emutableRealtimeTelemetryKeys.js","utils/setAuthToken.js","actions/userActions.js","actions/authActions.js","utils/identicon.js","components/layout/Navbar.jsx","components/layout/Footer.jsx","components/layout/Landing.jsx","components/common/TextFieldGroup.jsx","components/auth/CreateUser.jsx","components/auth/Login.jsx","actions/nodeActions.js","components/charts/LineChart.jsx","components/common/spinner.jsx","components/charts/ChartModal.jsx","actions/telemetryActions.js","components/common/ItemList.jsx","components/HOC/SensorItemHOC.jsx","components/HOC/UserPrefercesHOC.jsx","components/common/InputModal.jsx","components/common/Card.jsx","selectors/nodeNameSelector.js","selectors/nodeTypesSelector.js","components/dashboard/Dashboard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","value","undefined","Object","keys","length","trim","__webpack_require__","p","cacheInProgress","bool","type","payload","getErrors","err","response","data","initialState","isAuthenticated","user","preferences","nodes","caching","combineReducers","auth","state","arguments","action","objectSpread","isEmpty","telemetry","_action$payload","name1","name","type1","_action$payload2","sensors","_state$nodeName1$sens","nodeName","assign","nodeName1","sensorType","from","to","sampleData","unshift","apply","toConsumableArray","errors","middleware","thunk","multi","store","next","mutateAction","getState","_payload","units","newMessageObject","defineProperty","emutableRealtimeTelemetryKeys","dispatch","sonsorCreds","axiosCallDB","cachingProgress","getOwnPropertyNames","indexOf","newTo","then","res","catch","emutableTelemetryLog","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","setAuthToken","token","axios","defaults","headers","common","getUserPreferences","userId","get","concat","setUserPreferences","loginUser","userData","post","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","logoutUser","removeItem","purge","Identicon","require","Navbar","e","preventDefault","this","props","hex","_this$props$auth","identiconData","identicon","toString","authLinks","react_default","a","createElement","className","Link","onClick","onLogoutClick","bind","style","width","marginRight","src","alt","userName","circle","guestLinks","fi","data-toggle","data-target","Component","connect","Footer","Date","getFullYear","Landing","history","push","TextFieldGroup","_ref","placeholder","error","label","info","onChange","disabled","classnames","is-invalid","defaultProps","CreateUser","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","email","password","password2","assertThisInitialized","onSubmit","nextProps","setState","target","newUser","registerUser","noValidate","common_TextFieldGroup","withRouter","Login","propTypes","PropTypes","func","isRequired","object","socket","openSocket","LineChart","chartData","datasets","dataSet","timeLabels","map","_id","day","month","hour","minute","avgValue","labels","react_chartjs_2_es","height","options","spinner","margin","display","ChartModal","_Component","componentWillReceiveProps","title","sensor","isValid","toHandler","fromHandler","inherits","createClass","test","newTitle","_this$state","tabIndex","role","LineChart_LineChart","data-dismiss","Promise","resolve","reject","SensorItemHOC","fetchGraphData","WrappedComponent","parseFloat","split","badgeClassname","handlGraphClick","find","node","handle","_this2","_this$props","displayGraphButton","Fragment","charts_ChartModal","go","listItemClassname","composedHoc","createOrUpdateHandel","handleData","saveCallback","statusText","user_id","UserPrefercesHOC","saveModalDetails","console","log","InputModal","handleSave","inPutHandler","inputHandler","result","document","getElementById","click","aria-label","aria-hidden","Card","items","values","filter","item","button","common_InputModal","sort","i","ItemList","createSelector","names","Dashboard","componentDidMount","subscribe2RegisteredNodes","","dislplayComponent","common_Card","mapDispatchToProps","on","sensorPacket","nodeNameSelector","nodeTypesSelector","jwtToken","currentTime","now","exp","location","href","App","es","integration_react","loading","BrowserRouter","layout_Navbar","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3288daea.chunk.js","sourcesContent":["const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nmodule.exports = isEmpty;\r\n","module.exports = __webpack_public_path__ + \"static/media/ajax_loader_blue_256.14df1151.gif\";","import {\r\n  CACHE_SENSOR_TELEMETRY,\r\n  SET_NODE_NAME,\r\n  SET_SENSOR_TYPE,\r\n  GET_ERRORS,\r\n  CACHE_IN_PROGRESS\r\n} from \"../actions/types\";\r\n\r\nexport default (store, action) => {\r\n  const { sensors } = store.getState();\r\n  const { dispatch } = store;\r\n  let { sonsorCreds, axiosCallDB, cachingProgress } = action.payload;\r\n  const { nodeName, sensorType, from, to } = sonsorCreds;\r\n  cacheInProgress(true);\r\n  if (Object.getOwnPropertyNames(sensors).indexOf(nodeName) > -1) {\r\n    if (\r\n      Object.getOwnPropertyNames(sensors[nodeName]).indexOf(sensorType) > -1\r\n    ) {\r\n      if (sensors[nodeName][sensorType].from <= from) {\r\n        cachingProgress(nodeName, sensorType);\r\n        return cacheInProgress(false);\r\n      } else if (sensors[nodeName][sensorType].from > from) {\r\n        sonsorCreds.newTo = sensors[nodeName][sensorType].from;\r\n        axiosCallDB(sonsorCreds)\r\n          .then(res => {\r\n            dispatch({\r\n              type: SET_SENSOR_TYPE,\r\n              payload: {\r\n                nodeName,\r\n                sensorType,\r\n                from,\r\n                to,\r\n                sampleData: res\r\n              }\r\n            });\r\n            cachingProgress(nodeName, sensorType);\r\n            return cacheInProgress(false);\r\n          })\r\n          .catch(err => {\r\n            return getErrors(err);\r\n          });\r\n      }\r\n    } else\r\n      axiosCallDB(sonsorCreds)\r\n        .then(res => {\r\n          dispatch({\r\n            type: SET_NODE_NAME,\r\n            payload: {\r\n              nodeName,\r\n              data: { [sensorType]: { from, to, sampleData: res } }\r\n            }\r\n          });\r\n          cachingProgress(nodeName, sensorType);\r\n          return cacheInProgress(false);\r\n        })\r\n        .catch(err => {\r\n          return getErrors(err);\r\n        });\r\n  } else\r\n    axiosCallDB(sonsorCreds)\r\n      .then(res => {\r\n        dispatch({\r\n          type: CACHE_SENSOR_TELEMETRY,\r\n          payload: {\r\n            [nodeName]: { [sensorType]: { from, to, sampleData: res } }\r\n          }\r\n        });\r\n        cachingProgress(nodeName, sensorType);\r\n        return cacheInProgress(false);\r\n      })\r\n      .catch(err => {\r\n        return getErrors(err);\r\n      });\r\n};\r\n\r\nconst cacheInProgress = bool => {\r\n  return {\r\n    type: CACHE_IN_PROGRESS,\r\n    payload: bool\r\n  };\r\n};\r\n\r\nconst getErrors = err => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: err.response.data\r\n  };\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_NODE_2NODES = \"ADD_NODE_2NODES\";\r\nexport const ADD_TYPE_2NODE = \"ADD_TYPE_2NODE\";\r\nexport const EDIT_NODE_HANDLE = \"EDIT_NODE_HANDLE\";\r\nexport const SET_USER_PREFERENCES = \"SET_USER_PREFERENCES\";\r\nexport const SET_VALUE_2NODE_TYPE = \"SET_VALUE_2NODE_TYPE\";\r\nexport const GET_NODE_NAME = \"GET_NODE_NAME\";\r\nexport const GET_SENSOR_TYPE = \"GET_SENSOR_TYPE\";\r\nexport const GET_SENSOR_SAMPLE_RANGE = \"GET_SENSOR_SAMPLE_RANGE\";\r\nexport const CACHE_SENSOR_TELEMETRY = \"CACHE_SENSOR_TELEMETRY\";\r\nexport const CACHE_IN_PROGRESS = \"CACHE_IN_PROGRESS\";\r\nexport const SET_NODE_NAME = \"SET_NODE_NAME\";\r\nexport const SET_SENSOR_TYPE = \"SET_SENSOR_TYPE\";\r\nexport const SET_SENSOR_SAMPLE_RANGE = \"SET_SENSOR_SAMPLE_RANGE\";\r\nexport const SET_NEW_TELEMETRY = \"SET_NEW_TELEMETRY\";\r\nexport const SET_NEW_LOG_DATA = \"SET_NEW_LOG_DATA\";\r\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { EDIT_NODE_HANDLE, SET_USER_PREFERENCES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  preferences: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case EDIT_NODE_HANDLE:\r\n      return {\r\n        ...state\r\n      };\r\n    case SET_USER_PREFERENCES:\r\n      return {\r\n        ...state,\r\n        preferences: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_NODE_2NODES,\r\n  ADD_TYPE_2NODE,\r\n  SET_VALUE_2NODE_TYPE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  nodes: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_NODE_2NODES:\r\n      return {\r\n        ...state,\r\n        nodes: action.payload\r\n      };\r\n    case ADD_TYPE_2NODE:\r\n      const { name: name1, type: type1 } = action.payload;\r\n      state.nodes[name1] = type1;\r\n      return {\r\n        ...state\r\n      };\r\n    case SET_VALUE_2NODE_TYPE:\r\n      const { name, type, value } = action.payload;\r\n      state.nodes[name][type] && (state.nodes[name][type].value = value);\r\n      return {\r\n        ...state\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CACHE_SENSOR_TELEMETRY,\r\n  CACHE_IN_PROGRESS,\r\n  SET_NODE_NAME,\r\n  SET_SENSOR_TYPE,\r\n  SET_SENSOR_SAMPLE_RANGE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  caching: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CACHE_SENSOR_TELEMETRY:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n    case SET_NODE_NAME:\r\n      let { nodeName, data } = action.payload;\r\n      state[nodeName] = Object.assign(state[nodeName], data);\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case SET_SENSOR_TYPE:\r\n      let {\r\n        nodeName: nodeName1,\r\n        sensorType,\r\n        from,\r\n        to,\r\n        sampleData\r\n      } = action.payload;\r\n      state[nodeName1][sensorType].from = from;\r\n      state[nodeName1][sensorType].to = to;\r\n      state[nodeName1][sensorType].sampleData.unshift(...sampleData);\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case SET_SENSOR_SAMPLE_RANGE:\r\n      return state;\r\n\r\n    case CACHE_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        caching: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport nodesReducer from \"./nodesReducer\";\r\nimport telemetryRangeReducer from \"./telemetryRangeReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  telemetry: nodesReducer,\r\n  sensors: telemetryRangeReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport emutableRealtimeTelemetryKeys from \"./customMiddleware/emutableRealtimeTelemetryKeys\";\r\nimport emutableTelemetryLog from \"./customMiddleware/emutableTelemetryLog\";\r\n// async action dispatch\r\nimport thunk from \"redux-thunk\";\r\n// dispatchy action arrays\r\nimport multi from \"redux-multi\";\r\nimport rootReducer from \"./reducers\";\r\n// redux persistance (cache)\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nconst customMiddleware = store => next => action => {\r\n  let { type } = action;\r\n  let mutateAction = false;\r\n  //\r\n  type === \"SET_NEW_TELEMETRY\" &&\r\n    (mutateAction = emutableRealtimeTelemetryKeys(store, action));\r\n\r\n  type === \"SET_NEW_LOG_DATA\" &&\r\n    (mutateAction = emutableTelemetryLog(store, action));\r\n\r\n  mutateAction && (action = mutateAction);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [thunk, multi, customMiddleware];\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nlet store = createStore(\r\n  persistedReducer,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nlet persistor = persistStore(store);\r\nexport { store, persistor };\r\n","import {\r\n  ADD_NODE_2NODES,\r\n  ADD_TYPE_2NODE,\r\n  SET_VALUE_2NODE_TYPE\r\n} from \"../actions/types\";\r\n\r\nexport default (store, action) => {\r\n  let { type, payload } = action;\r\n  const { nodes } = store.getState().telemetry;\r\n  if (type === \"SET_NEW_TELEMETRY\") {\r\n    const { name, type, value, units } = payload;\r\n    payload = nodes;\r\n    let newMessageObject = { [type]: { value: value + units } };\r\n    if (nodes[name]) {\r\n      if (nodes[name][type]) {\r\n        payload[name][type] = Object.assign(\r\n          nodes[name][type],\r\n          newMessageObject[type]\r\n        );\r\n        return {\r\n          type: SET_VALUE_2NODE_TYPE,\r\n          payload: { name, type, value: value + units }\r\n        };\r\n      } else {\r\n        payload[name] = Object.assign(nodes[name], newMessageObject);\r\n        return {\r\n          type: ADD_TYPE_2NODE,\r\n          payload: (name, payload[name])\r\n        };\r\n      }\r\n    } else {\r\n      payload = Object.assign(payload, {\r\n        [name]: { [type]: { value: value + units } }\r\n      });\r\n      return {\r\n        type: ADD_NODE_2NODES,\r\n        payload\r\n      };\r\n    }\r\n  } else return false;\r\n  //console.log(payload, nodes);\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete Auth Header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { GET_ERRORS, SET_USER_PREFERENCES } from \"./types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const createOrUpdateHandel = (handleData, saveCallback) => dispatch => {\r\n  // Create Or Update Handel\r\n  axios\r\n    .post(`/api/users/assign-handle/${handleData.title}`, handleData)\r\n    .then(res => {\r\n      saveCallback(res.statusText);\r\n      dispatch(getUserPreferences(handleData.user_id));\r\n    })\r\n    .catch(err => {\r\n      saveCallback(err.response.data.errors);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const getUserPreferences = userId => dispatch => {\r\n  // get User Preferences\r\n  axios\r\n    .get(`/api/users/get-preferences/${userId}`)\r\n    .then(res => {\r\n      dispatch(setUserPreferences(res.data));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err\r\n      })\r\n    );\r\n};\r\n\r\n// Set user preferences\r\nexport const setUserPreferences = preferences => dispatch => {\r\n  dispatch({\r\n    type: SET_USER_PREFERENCES,\r\n    payload: preferences\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { getUserPreferences, setUserPreferences } from \"./userActions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { persistor } from \"../store\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData) // Maybe user userData instead decoding token\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to auth header\r\n      setAuthToken(token);\r\n      // Decode token (extract user data)\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n      dispatch(getUserPreferences(decoded.id));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Logout user\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  persistor.purge();\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set the current user to {} which will set isAuthenticated to false (states)\r\n  dispatch(setCurrentUser({}));\r\n  dispatch(setUserPreferences({}));\r\n};\r\n","const Identicon = require(\"identicon.js\");\r\n\r\nexport function identIcon(hex) {\r\n  const newhex = hex + 77;\r\n  return new Identicon(newhex, 200).toString();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { identIcon } from \"../../utils/identicon\";\r\nimport { FiCpu } from \"react-icons/fi\";\r\n\r\nclass Navbar extends Component {\r\n  static propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    this.props.logoutUser(this.props.persistor);\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    let identiconData = \"\";\r\n    isAuthenticated && (identiconData = \"base64,\" + identIcon(user.identicon));\r\n    const authLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/manager\">\r\n              {\" \"}\r\n              Manager\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/\"\r\n              onClick={this.onLogoutClick.bind(this)}\r\n              className=\"nav-link text-black-50\"\r\n            >\r\n              <img\r\n                className=\"rounded\"\r\n                style={{ width: \"30px\", marginRight: \"5px\" }}\r\n                src={\"data:image/png;\" + identiconData}\r\n                alt={user.userName}\r\n                circle=\"true\"\r\n              />{\" \"}\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              {\" \"}\r\n              dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item \">\r\n            <Link className=\"nav-link \" to=\"/create\">\r\n              Create User\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4 \">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand text-white-50\" to=\"/\">\r\n            <FiCpu className=\"mb-2\" /> SOL Manager\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          {isAuthenticated ? authLinks : guestLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Navbar);\r\n","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer mt-5 p-4 text-center bg-primary\">\r\n      Copiright &copy; {new Date().getFullYear} SOL App\r\n    </footer>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">SOL Manager</h1>\r\n                <p className=\"lead\">\r\n                  {\" \"}\r\n                  Create a user or login in order to manage/view you'r\r\n                  site/node/s data\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/create\" className=\"btn btn-lg btn-light mr-2\">\r\n                  Create User\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg text-dark btn-primary \">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  nodes: state.telemetry.nodes,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        value={value}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nclass CreateUser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      userName: this.state.userName,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center text-black-50\">Sign Up</h1>\r\n              <p className=\"lead text-center text-white-50\">\r\n                Create your DevConnector account\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"User name\"\r\n                  name=\"userName\"\r\n                  value={this.state.userName}\r\n                  onChange={this.onChange}\r\n                  error={errors.userName}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"password2\"\r\n                  type=\"password\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={errors.password2}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary text-black-50 btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateUser.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(CreateUser));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      password: \"\",\r\n      userName: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      userName: this.state.userName,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login \">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center text-black-50\">Log In</h1>\r\n              <p className=\"lead text-center text-white-50\">\r\n                Login to your managemant account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  value={this.state.userName}\r\n                  placeholder=\"User name\"\r\n                  name=\"userName\"\r\n                  onChange={this.onChange}\r\n                  error={errors.userName}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  value={this.state.password}\r\n                  placeholder=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nloginUser.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import openSocket from \"socket.io-client\";\r\n\r\nimport { SET_NEW_TELEMETRY } from \"./types\";\r\n\r\nconst socket = openSocket(\"http://localhost:5001\");\r\nconst subscribe2RegisteredNodes = () => dispatch => {\r\n  socket.on(\"event\", sensorPacket => {\r\n    dispatch({\r\n      type: SET_NEW_TELEMETRY,\r\n      payload: sensorPacket\r\n    });\r\n  });\r\n};\r\n\r\nexport { subscribe2RegisteredNodes };\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class LineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: { datasets: [{ label: \"\", data: [0, 0] }] }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { dataSet } = this.props;\r\n    if (dataSet !== 0) {\r\n      const timeLabels = dataSet.map(\r\n        res =>\r\n          res._id.day +\r\n          \"/\" +\r\n          res._id.month +\r\n          \" \" +\r\n          res._id.hour +\r\n          \":\" +\r\n          (res._id.minute < 10 ? \"0\" + res._id.minute : res._id.minute)\r\n      );\r\n      const data = dataSet.map(res => res.avgValue);\r\n      this.setState({\r\n        chartData: {\r\n          labels: timeLabels,\r\n          datasets: [\r\n            {\r\n              label: \"Average sampled\",\r\n              data: data\r\n            }\r\n          ]\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    prop: PropTypes\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={this.state.chartData}\r\n          width={100}\r\n          height={80}\r\n          options={\r\n            {\r\n              //maintainAspectRatio: false\r\n            }\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport spinner from \"./ajax_loader_blue_256.gif\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n        alt=\"Loadind\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LineChart from \"./LineChart\";\r\nimport Spinner from \"../common/spinner\";\r\n\r\nexport class ChartModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isValid: true,\r\n      errors: null\r\n    };\r\n    this.toHandler = this.toHandler.bind(this);\r\n    this.fromHandler = this.fromHandler.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    sensor: PropTypes.string\r\n  };\r\n\r\n  fromHandler(e) {\r\n    this.setState({\r\n      isValid: /^[A-Za-z][A-Za-z0-9-_]*$/.test(e.target.value),\r\n      errors: null,\r\n      newTitle: e.target.value\r\n    });\r\n  }\r\n\r\n  toHandler(e) {\r\n    this.setState({\r\n      isValid: /^[A-Za-z][A-Za-z0-9-_]*$/.test(e.target.value),\r\n      errors: null,\r\n      newTitle: e.target.value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    this.setState({\r\n      title: nextProps.title,\r\n      sensor: nextProps.sensor,\r\n      dataSet: nextProps.dataSet,\r\n      cacheInProgress: nextProps.cacheInProgress\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, sensor, errors, dataSet, cacheInProgress } = this.state;\r\n    return (\r\n      <div\r\n        className=\"modal fade bd-example-modal-lg\"\r\n        id={title + \"_\" + sensor}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Node: {title}\r\n              </h5>\r\n            </div>\r\n            <div className=\"modal-body\" />\r\n            {cacheInProgress || !dataSet ? (\r\n              <Spinner />\r\n            ) : (\r\n              <LineChart dataSet={dataSet} />\r\n            )}\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n                id={\"#\" + title + sensor}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartModal;\r\n","import { SET_NEW_LOG_DATA } from \"./types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst axiosCallDB = sonsorCreds => {\r\n  const { nodeName, sensorType, from, to, newTo } = sonsorCreds;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\r\n        `/api/telemetry/get-between/${nodeName}/${sensorType}/${from}/${\r\n          newTo ? newTo : to\r\n        }`\r\n      )\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err));\r\n  });\r\n};\r\n\r\nexport const fetchGraphData = (sonsorCreds, cachingProgress) => dispatch => {\r\n  dispatch({\r\n    type: SET_NEW_LOG_DATA,\r\n    payload: {\r\n      sonsorCreds,\r\n      axiosCallDB,\r\n      cachingProgress\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport SensorItemHOC from \"../HOC/SensorItemHOC\";\r\n\r\nconst listItemGroup = props => {\r\n  let { badgeClassname, displayGraphButton, sensor, value } = props;\r\n  let listItemClassname = displayGraphButton ? \"col-md-10\" : \"col-md-12\";\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      <div className=\"row justify-content-start\">\r\n        <li\r\n          key={sensor}\r\n          className={classnames(\r\n            \"list-group-item d-flex justify-content-between align-items-center\",\r\n            listItemClassname\r\n          )}\r\n        >\r\n          {sensor}\r\n          <span className={classnames(\"badge  badge-pill\", badgeClassname)}>\r\n            {value}\r\n          </span>\r\n        </li>\r\n        {displayGraphButton}\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nlistItemGroup.propTypes = {\r\n  sensor: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SensorItemHOC(listItemGroup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { GoGraph } from \"react-icons/go\";\r\nimport ChartModal from \"../charts/ChartModal\";\r\nimport { fetchGraphData } from \"../../actions/telemetryActions\";\r\n\r\nconst SensorItemHOC = WrappedComponent => {\r\n  return class SensorItemHOC extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        sampleData: 0,\r\n        badgeClassname: \"\"\r\n      };\r\n      this.handlGraphClick = this.handlGraphClick.bind(this);\r\n    }\r\n\r\n    handlGraphClick(title, sensor) {\r\n      const { nodes } = this.props.user.preferences;\r\n      if (nodes.length > 0)\r\n        title = nodes.find(node => node.handle === title).node.name;\r\n      let from = 1542465373000 - 91000000;\r\n      let to = 1542465373000;\r\n      let sonsorCreds = {\r\n        nodeName: title,\r\n        sensorType: sensor,\r\n        from,\r\n        to\r\n      };\r\n\r\n      this.props.fetchGraphData(sonsorCreds, this.cachingProgress);\r\n    }\r\n\r\n    cachingProgress = (title, sensor) => {\r\n      let { sampleData } = this.props.sensors[title][sensor];\r\n      this.setState({ sampleData });\r\n    };\r\n\r\n    componentWillReceiveProps = nextProps => {\r\n      let { sensor, value } = nextProps;\r\n      switch (sensor) {\r\n        case \"temperture\":\r\n          if (parseFloat(value.split(\"(\")[0]) > 28)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) > 26)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 22)\r\n            this.setState({ badgeClassname: \"badge-primary\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        case \"humidity\":\r\n          if (parseFloat(value.split(\"(\")[0]) > 55)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) > 45)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 20)\r\n            this.setState({ badgeClassname: \"badge-secondary\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        case \"co2\":\r\n          if (parseFloat(value.split(\"(\")[0]) > 1600)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) > 1300)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 800)\r\n            this.setState({ badgeClassname: \"badge-secondary\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        case \"light\":\r\n          if (parseFloat(value.split(\"(\")[0]) < 10)\r\n            this.setState({ badgeClassname: \"badge-dark\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 40)\r\n            this.setState({ badgeClassname: \"badge-secondary\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 80)\r\n            this.setState({ badgeClassname: \"badge-danger\" });\r\n          else if (parseFloat(value.split(\"(\")[0]) < 150)\r\n            this.setState({ badgeClassname: \"badge-warning\" });\r\n          else this.setState({ badgeClassname: \"badge-success\" });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    render() {\r\n      const { isAuthenticated } = this.props.auth;\r\n      let { title, sensor } = this.props;\r\n\r\n      let { sampleData, cacheInProgress } = this.state;\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          badgeClassname={this.state.badgeClassname}\r\n          displayGraphButton={\r\n            isAuthenticated ? (\r\n              <React.Fragment>\r\n                <ChartModal\r\n                  title={title}\r\n                  sensor={sensor}\r\n                  dataSet={sampleData}\r\n                  cacheInProgress={cacheInProgress}\r\n                />\r\n                <button\r\n                  className=\"btn btn-outline-secondary col-md-2\"\r\n                  type=\"button\"\r\n                  data-toggle=\"modal\"\r\n                  data-target={\"#\" + title + \"_\" + sensor}\r\n                  onClick={() => this.handlGraphClick(title, sensor)}\r\n                >\r\n                  <GoGraph />\r\n                </button>{\" \"}\r\n              </React.Fragment>\r\n            ) : (\r\n              false\r\n            )\r\n          }\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  sensors: state.sensors,\r\n  user: state.user,\r\n  auth: state.auth\r\n});\r\n\r\nconst composedHoc = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { fetchGraphData }\r\n  ),\r\n  SensorItemHOC\r\n);\r\n\r\nexport default composedHoc;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createOrUpdateHandel } from \"../../actions/userActions\";\r\n\r\nconst UserPrefercesHOC = WrappedComponent => {\r\n  return class UserPrefercesHOC extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {};\r\n      this.saveModalDetails = this.saveModalDetails.bind(this);\r\n    }\r\n\r\n    saveModalDetails(handle, saveCallback) {\r\n      const { id } = this.props.auth.user;\r\n      let handleData = {\r\n        user_id: id,\r\n        title: this.props.title,\r\n        handle\r\n      };\r\n      console.log(handleData);\r\n      this.props.createOrUpdateHandel(handleData, saveCallback);\r\n    }\r\n\r\n    componentWillReceiveProps = nextProps => {\r\n      const { title } = this.props;\r\n      if (nextProps.user.preferences.nodes) {\r\n        const { nodes } = nextProps.user.preferences;\r\n        if (nodes.length > 0)\r\n          this.handle = nodes.find(node => node.node.name === title).handle;\r\n      } else this.handle = title;\r\n    };\r\n    render() {\r\n      const { isAuthenticated } = this.props.auth;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          title={this.handle}\r\n          saveModalDetails={isAuthenticated ? this.saveModalDetails : null}\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  auth: state.auth\r\n});\r\n\r\nconst composedHoc = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { createOrUpdateHandel }\r\n  ),\r\n  UserPrefercesHOC\r\n);\r\n\r\nexport default composedHoc;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nexport class InputModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isValid: true,\r\n      errors: null\r\n    };\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.inPutHandler = this.inputHandler.bind(this);\r\n    this.saveCallback = this.saveCallback.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    handle: PropTypes.string\r\n  };\r\n\r\n  saveCallback(result) {\r\n    if (result === \"OK\")\r\n      document.getElementById(\"#\" + this.state.title).click();\r\n    else\r\n      this.setState({\r\n        errors: result.toString(),\r\n        isValid: false\r\n      });\r\n  }\r\n\r\n  handleSave() {\r\n    const { newTitle } = this.state;\r\n    this.props.saveModalDetails(newTitle, this.saveCallback);\r\n  }\r\n\r\n  inputHandler(e) {\r\n    this.setState({\r\n      isValid: /^[A-Za-z][A-Za-z0-9-_]*$/.test(e.target.value),\r\n      errors: null,\r\n      newTitle: e.target.value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    this.setState({\r\n      title: nextProps.title\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, isValid, errors } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"modal modal-primary fade\"\r\n        id={title}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Node: {title}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">Handle:</span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control\", {\r\n                    \"is-invalid\": !isValid\r\n                  })}\r\n                  placeholder={title}\r\n                  aria-label={title}\r\n                  onChange={e => this.inputHandler(e)}\r\n                />\r\n\r\n                {!isValid && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {!errors ? \"Only letters and/or numbers alowed\" : errors}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n                id={\"#\" + title}\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                disabled={!isValid}\r\n                onClick={() => {\r\n                  this.handleSave();\r\n                }}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputModal;\r\n","import React, { Component } from \"react\";\r\n// import classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport ItemList from \"../common/ItemList\";\r\nimport UserPrefercesHOC from \"../HOC/UserPrefercesHOC\";\r\nimport InputModal from \"./InputModal\";\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let { items } = this.props;\r\n    const { saveModalDetails, values, title } = this.props;\r\n    items = items.filter(item => item !== \"undefined\");\r\n    const button = saveModalDetails ? (\r\n      <button\r\n        className=\"btn btn-sm btn-outline-secondary float-right\"\r\n        data-toggle=\"modal\"\r\n        data-target={\"#\" + title}\r\n      >\r\n        Edit\r\n      </button>\r\n    ) : null;\r\n    return (\r\n      <React.Fragment>\r\n        <InputModal\r\n          title={title}\r\n          handle={title}\r\n          saveModalDetails={saveModalDetails && saveModalDetails}\r\n        />\r\n        <div className=\"col col-md-4 col-sm-auto align-self-center\">\r\n          <div className=\"card bg-light mb-3 \">\r\n            <div className=\"card-header\">\r\n              {title}\r\n              {button}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {/* <h5 className=\"card-title\">{handle ? handle : name}</h5> \r\n              <p className=\"card-text\" />*/}\r\n              {items.sort().map((item, i) => (\r\n                <ItemList\r\n                  key={item}\r\n                  title={title}\r\n                  sensor={item}\r\n                  value={values[item].value}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  sensors: PropTypes.array.isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  handle: PropTypes.string\r\n};\r\n\r\nexport default UserPrefercesHOC(Card);\r\n","import { createSelector } from \"reselect\";\r\n// Select function to collect state parts\r\nconst telemetrySelector = state => state.telemetry;\r\n\r\nconst getNames = nodes => {\r\n  let names = Object.getOwnPropertyNames(nodes.nodes);\r\n  names = names.sort().filter(name => name !== \"undefined\");\r\n  return names;\r\n};\r\n\r\nexport default createSelector(telemetrySelector, getNames);\r\n","import { createSelector } from \"reselect\";\r\n// Select function to collect state parts\r\nconst changeDetectorSelector = state => state.telemetry;\r\n\r\nconst getTypes = nodes => {\r\n  return nodes.nodes;\r\n};\r\n\r\nexport default createSelector(changeDetectorSelector, getTypes);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { subscribe2RegisteredNodes } from \"../../actions/nodeActions\";\r\nimport Card from \"../common/Card\";\r\nimport nodeNameSelector from \"../../selectors/nodeNameSelector\";\r\nimport nodeTypesSelector from \"../../selectors/nodeTypesSelector\";\r\nimport Spinner from \"../common/spinner\";\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      names: null,\r\n      nodes: { \"\": \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.subscribe2RegisteredNodes();\r\n  };\r\n\r\n  render() {\r\n    let { nodes, names } = this.props;\r\n    let dislplayComponent = <Spinner />;\r\n\r\n    if (names !== null && names.length > 0)\r\n      dislplayComponent = (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row align-items-start justify-content-center\">\r\n            {names.map(name => (\r\n              <Card\r\n                key={name}\r\n                title={name}\r\n                items={Object.getOwnPropertyNames(nodes[name])}\r\n                values={nodes[name]}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    return <React.Fragment>{dislplayComponent}</React.Fragment>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  names: nodeNameSelector(state),\r\n  nodes: nodeTypesSelector(state),\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nconst mapDispatchToProps = { subscribe2RegisteredNodes };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { getUserPreferences } from \"./actions/userActions\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\nimport CreateUser from \"./components/auth/CreateUser\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n  store.dispatch(getUserPreferences(decoded.id));\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router>\n            <div className=\"App \">\n              <Navbar />\n              <Route exact path=\"/\" component={Landing} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <div className=\"container\">\n                <Route exact path=\"/create\" component={CreateUser} />\n                <Route exact path=\"/login\" component={Login} />\n              </div>\n              <Footer />\n            </div>\n          </Router>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}